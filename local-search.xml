<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2022年技术胖私藏工具分享</title>
    <link href="/2022/10/25/front/2022%E5%B9%B4%E6%8A%80%E6%9C%AF%E8%83%96%E7%A7%81%E8%97%8F%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/"/>
    <url>/2022/10/25/front/2022%E5%B9%B4%E6%8A%80%E6%9C%AF%E8%83%96%E7%A7%81%E8%97%8F%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="2022年技术胖私藏工具分享"><a href="#2022年技术胖私藏工具分享" class="headerlink" title="2022年技术胖私藏工具分享"></a>2022年技术胖私藏工具分享</h1><p>300+编程实用工具</p><h2 id="技术胖博客"><a href="#技术胖博客" class="headerlink" title="技术胖博客"></a><a href="https://jspang.com/">技术胖博客</a></h2><h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li>Underscore.js<br>一套完善的函数式编程的接口，更方便地在JavaScript中实现函数式编程<br><a href="https://underscorejs.org/">https://underscorejs.org/</a></li><li>fastclick<br>用于消除物理点击和click移动浏览器上事件触发之间的 300 毫秒延迟<br><a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a></li><li>Lodash<br>一致性、模块化、高性能的 JavaScript 实用工具库<br><a href="https://lodash.com/">https://lodash.com/</a></li><li>crypto-js<br>加密标准的 JavaScript 库。<br><a href="https://github.com/brix/crypto-js">https://github.com/brix/crypto-js</a></li><li>zxcvbn<br>JavaScript密码强度估算库<br><a href="https://github.com/dropbox/zxcvbn">https://github.com/dropbox/zxcvbn</a></li><li>zxcvbn-ts<br>支持Typescript的密码强度估算库<br><a href="https://github.com/zxcvbn-ts/zxcvbn">https://github.com/zxcvbn-ts/zxcvbn</a></li><li>clipboard.js<br>将文本复制到剪贴板的轻量级JS 库<br><a href="https://clipboardjs.com/">https://clipboardjs.com/</a></li><li>tesseract.js<br>Javascript的OCR引擎，在浏览器离线识别图片中的文字<br><a href="https://tesseract.projectnaptha.com/">https://tesseract.projectnaptha.com/</a></li><li>number-precision<br>小而快的库，用于精确地进行加法、减法、乘法和除法运算<br><a href="https://github.com/nefe/number-precision">https://github.com/nefe/number-precision</a></li><li>fingerprintjs<br>具有高准确度和稳定性的浏览器指纹库<br><a href="https://fingerprint.com/">https://fingerprint.com/</a></li><li>ViteShot<br>基于Vite的快速简单的截图工具。<br><a href="https://viteshot.com/">https://viteshot.com/</a></li><li>Valine<br>快速、简洁且高效的无后端评论系统<br><a href="https://valine.js.org/">https://valine.js.org/</a></li><li>cnpm<br>淘宝提供的一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步<br><a href="https://npmmirror.com/">https://npmmirror.com/</a></li><li>yarn<br>快速、可靠和安全的依赖管理<br><a href="https://yarnpkg.com/">https://yarnpkg.com/</a></li><li>responsively-app<br>一种改进的 Web 浏览器，有助于响应式 Web 开发。Web 开发人员必须拥有开发工具<br><a href="https://responsively.app/">https://responsively.app/</a></li><li>javascript-obfuscator<br>功能强大的免费 JavaScript 混淆器，包含多种功能，可为源代码提供保护<br><a href="https://obfuscator.io/">https://obfuscator.io/</a></li><li>Nano ID<br>小巧的、安全的、URL 友好的、独特的 JavaScript 字符串 唯一 ID 生成器<br><a href="https://zelark.github.io/nano-id-cc/">https://zelark.github.io/nano-id-cc/</a></li><li>spy-debugger<br>一站式页面调试、抓包工具。远程调试任何手机浏览器页面，任何手机移动端webview（如：微信，HybridApp等）。支持HTTP/HTTPS，无需USB连接设备<br><a href="https://responsively.app/">https://responsively.app/</a></li><li>fuite<br>用于查找 Web 应用程序中的内存泄漏的工具<br><a href="https://github.com/nolanlawson/fuite">https://github.com/nolanlawson/fuite</a></li><li>qs<br>查询字符串解析和字符串化库<br><a href="https://github.com/ljharb/qs">https://github.com/ljharb/qs</a></li><li>js-cookie<br>用于处理 cookie 的简单、轻量级 JavaScript API<br><a href="https://github.com/js-cookie/js-cookie">https://github.com/js-cookie/js-cookie</a></li><li>tinymce<br>排名第一的可定制、可扩展和灵活的富文本编辑器<br><a href="https://www.tiny.cloud/">https://www.tiny.cloud/</a></li><li>html2canvas<br>允许在用户浏览器上对网页或其部分进行“截图”<br><a href="https://html2canvas.hertzen.com/">https://html2canvas.hertzen.com/</a></li><li>shepherd<br>引导用户浏览您的应用<br><a href="https://shepherdjs.dev/">https://shepherdjs.dev/</a></li><li>tinykeys<br>极小的键盘事件监听库<br><a href="https://jamiebuilds.github.io/tinykeys/">https://jamiebuilds.github.io/tinykeys/</a></li><li>ag-grid<br>用于构建企业应用程序的最佳 JavaScript 数据表<br><a href="https://www.ag-grid.com/">https://www.ag-grid.com/</a></li><li>tui.calendar<br>功能齐全的 JavaScript 日程表<br><a href="https://ui.toast.com/tui-calendar">https://ui.toast.com/tui-calendar</a></li><li>screenfull<br>用于跨浏览器使用 JavaScript Fullscreen API 的简单包装器<br><a href="https://sindresorhus.com/screenfull/">https://sindresorhus.com/screenfull/</a></li><li>Fuse.js<br>JavaScript 中的轻量级模糊搜索<br><a href="https://fusejs.io/">https://fusejs.io/</a></li><li>i18next<br>用于浏览器或任何其他 javascript 环境（例如 Node.js、Deno）的国际化框架<br><a href="https://www.i18next.com/">https://www.i18next.com/</a></li><li>JsBarcode<br>适用于 Web 和 Node.js 的易于使用但功能强大的条形码生成器<br><a href="https://lindell.me/JsBarcode/">https://lindell.me/JsBarcode/</a></li><li>path-to-regexp<br>将 <code>/user/:name</code> 等路径字符串转换为正则表达式<br><a href="https://github.com/pillarjs/path-to-regexp">https://github.com/pillarjs/path-to-regexp</a></li><li>await-to-js<br>异步等待包装器，无需 try-catch 即可轻松处理错误<br><a href="https://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/">https://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/</a></li><li>md5<br>用 MD5 散列消息的 JavaScript 函数<br><a href="https://github.com/pvorb/node-md5">https://github.com/pvorb/node-md5</a></li><li>mitt.js<br>它足够小，仅有200bytes，其次支持全部事件的监听和批量移除，替代EventBus<br><a href="https://npm.im/mitt">https://npm.im/mitt</a></li><li> js-spark-md5<br>MD5 算法的快速 md5 实现<br><a href="https://github.com/satazor/js-spark-md5">https://github.com/satazor/js-spark-md5</a></li><li>nano<br>小型（130 字节）、安全、URL 友好、唯一的 JavaScript 字符串 ID 生成器<br><a href="https://zelark.github.io/nano-id-cc/">https://zelark.github.io/nano-id-cc/</a></li><li>jsPDF<br>用 JavaScript 生成 PDF<br><a href="https://parall.ax/products/jspdf">https://parall.ax/products/jspdf</a></li><li>ua-parser-js<br>从User-Agen中检测浏览器、引擎、操作系统、CPU 和设备类型/型号，占用空间相对较小（压缩后约 17KB，压缩后约 6KB），支持浏览器和 node.js 环境<br><a href="http://faisalman.github.io/ua-parser-js/">http://faisalman.github.io/ua-parser-js/</a></li><li>togetherjs<br>网站添加实时协作功能的JavaScript库，两个人可以在同一页面上进行交互，查看彼此的光标、编辑并一起浏览网站<br><a href="https://togetherjs.com/">https://togetherjs.com/</a></li><li>Clusterize.js<br>开源的长列表渲染库，轻量级的原生大数据量展示<br><a href="https://clusterize.js.org/">https://clusterize.js.org/</a></li><li>crypto-js-wasm<br>加密标准的 javascript 库，比 crypto-js快16 倍<br><a href="https://github.com/originjs/crypto-js-wasm">https://github.com/originjs/crypto-js-wasm</a></li><li>pdfkit<br>用于 Node 和浏览器的 JavaScript PDF 生成库<br><a href="http://pdfkit.org/">http://pdfkit.org/</a></li><li>zx<br>使用js编写更便捷shell脚本<br><a href="https://www.npmjs.com/package/zx">https://www.npmjs.com/package/zx</a></li><li>NProgress.js<br>适用于应用程序的进度条，受 Google、YouTube 和 Medium 的启发<br><a href="https://ricostacruz.com/nprogress/">https://ricostacruz.com/nprogress/</a><h3 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h3></li><li>highlight.js<br>JavaScript 语法高亮器，具有语言自动检测和零依赖项<br><a href="https://highlightjs.org/">https://highlightjs.org/</a></li><li>Drawflow<br>创建简单的流程库<br><a href="https://jerosoler.github.io/Drawflow/">https://jerosoler.github.io/Drawflow/</a></li><li>tui.image-editor<br>HTML5 Canvas 的全功能图像编辑器。它易于使用并提供强大的过滤器<br><a href="https://ui.toast.com/tui-image-editor">https://ui.toast.com/tui-image-editor</a></li><li>viewerjs<br>JavaScript 图像查看器<br><a href="https://fengyuanchen.github.io/viewerjs/">https://fengyuanchen.github.io/viewerjs/</a></li><li>prism.js<br>轻量级、健壮、优雅的语法高亮库<br><a href="https://prismjs.com/">https://prismjs.com/</a></li><li>fabric.js<br>功能强大且简单的 Canvas库，轻松处理 HTML5 画布元素。是画布元素之上的交互式对象模型，也是一个SVG-to-canvas 解析器<br><a href="http://fabricjs.com/">http://fabricjs.com/</a></li><li>fullPage.js<br>用于创建全屏滚动网站（也称为单页网站或一页网站），并在该网站的各个部分内添加横向滑块<br><a href="https://alvarotrigo.com/fullPage/">https://alvarotrigo.com/fullPage/</a></li><li>opentype.js<br>OpenType 和 TrueType 字体解析器和编写器。它允许您从浏览器或 node.js访问文本的字母形式<br><a href="https://opentype.js.org/">https://opentype.js.org/</a></li><li>icones.js<br>具有即时搜索功能的图标资源管理器，由 Iconify 提供支持<br><a href="https://icones.js.org/">https://icones.js.org/</a></li><li>reveal.js<br>创建功能齐全且精美的演示文稿<br><a href="https://revealjs.com/">https://revealjs.com/</a></li><li>carbon<br>创建和共享源代码的精美图像<br><a href="https://carbon.now.sh/">https://carbon.now.sh/</a></li><li>lucky-canvas<br>基于 TS + Canvas 开发的【大转盘 / 九宫格 / 老虎机】抽奖插件， 一套源码适配多端框架 JS / Vue / React / Taro / UniApp / 微信小程序等<br><a href="https://100px.net/">https://100px.net/</a></li><li>Darkmode.js<br>在几秒钟内为您的网站添加暗模式/夜间模式<br><a href="https://darkmodejs.learn.uno/?_360safeparam=8406218">https://darkmodejs.learn.uno/?_360safeparam=8406218</a></li><li>ECharts<br>强大的交互式图表和浏览器数据可视化库<br><a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></li><li>PixiJS<br>使用最快，最灵活的2D WebGL渲染器创建精美的内容<br><a href="https://pixijs.com/">https://pixijs.com/</a></li><li> AntV - G2<br>数据驱动，高度易用，可扩展的可视化图形语法。<br><a href="https://g2plot.antv.vision/zh/">https://g2plot.antv.vision/zh/</a></li><li>ApexCharts.js<br>基于SVG的JavaScript图表库，可使用简单的API构建交互式图表和可视化文件</li><li>OpenLayers<br>高性能，功能丰富的库，用于在Web上创建交互式地图。它可以显示从任何网页上的任何来源加载的地图图块，矢量数据和标记<br><a href="https://openlayers.org/">https://openlayers.org/</a></li><li>Two.js<br>面向现代Web浏览器的二维绘图api，渲染不可知实现相同的API在多种环境中得出：svg，canvas，和webgl<br><a href="https://two.js.org/">https://two.js.org/</a></li><li>Paper.js<br>基于HTML5 Canvas的矢量图形的图形库<br><a href="http://paperjs.org/">http://paperjs.org/</a></li><li>Panolens.js<br>事件驱动的基于WebGL的全景查看器。轻巧而灵活。它建立在Three.JS之上<br><a href="https://pchen66.github.io/Panolens/">https://pchen66.github.io/Panolens/</a></li><li>A-Frame<br>用于构建 3D/AR/VR 体验的 Web 框架<br><a href="https://aframe.io/">https://aframe.io/</a></li><li>mermaid-js<br>以与 Markdown 类似的方式从文本生成图表和流程图<br><a href="https://mermaid-js.github.io/mermaid/">https://mermaid-js.github.io/mermaid/</a></li><li>mo · js<br>为网站添加基于JavaScript的动态图形<br><a href="https://mojs.github.io/">https://mojs.github.io/</a></li><li>trianglify<br>Javascript 库，用于创建独特的、美观的三角形图案<br><a href="http://qrohlf.com/trianglify/">http://qrohlf.com/trianglify/</a></li><li>Babylon.js<br>能强大、美观、简单、开放的游戏和渲染引擎<br><a href="https://www.babylonjs.com/">https://www.babylonjs.com/</a></li><li>Oasis Engine<br>高性能 Web 蚂蚁图形引擎<br><a href="https://oasisengine.cn/">https://oasisengine.cn/</a></li><li>Butterfly<br>基于JS的数据驱动的节点式编排组件库<br><a href="https://butterfly-dag.gitee.io/butterfly-dag/home">https://butterfly-dag.gitee.io/butterfly-dag/home</a></li><li>image-optimizer<br>使用 Electron、Vue 和 Vite 用于优化图像和矢量图形的免费开源工具<br><a href="https://github.com/antonreshetov/image-optimizer">https://github.com/antonreshetov/image-optimizer</a></li><li>Sketchfab<br>需任何插件即可在Web页面里嵌入交互式3D模型<br><a href="https://sketchfab.com/">https://sketchfab.com/</a></li><li>vConsole<br>用于移动网页的轻量级、可扩展的前端开发工具<br><a href="https://github.com/Tencent/vConsole">https://github.com/Tencent/vConsole</a></li><li>swiper<br>免费且最现代的移动触摸滑块，具有硬件加速过渡和惊人的原生行为<br><a href="https://swiperjs.com/">https://swiperjs.com/</a></li><li>Slidev<br>面向开发人员的演示幻灯片<br><a href="https://sli.dev/">https://sli.dev/</a></li><li>konva<br>HTML5 Canvas JavaScript 框架，它支持桌面和移动应用程序的高性能动画、过渡、节点嵌套、分层、过滤、缓存、事件处理等等<br><a href="https://konvajs.org/">https://konvajs.org/</a></li><li>p5.j​​s<br>开源的JavaScript可视化库，processing的js实现版本<br><a href="https://p5js.org/zh-Hans/">https://p5js.org/zh-Hans/</a></li><li>cesium<br>用于世界级 3D 地球仪和地图的开源 JavaScript 库<br><a href="https://cesium.com/platform/cesiumjs/">https://cesium.com/platform/cesiumjs/</a></li><li>driver.js<br>一个轻量级、无依赖的用户引导组件<br><a href="https://kamranahmed.info/driver.js/">https://kamranahmed.info/driver.js/</a></li><li>vanilla-tilt.js<br>平滑的 3D 倾斜 JavaScript 库<br><a href="https://micku7zu.github.io/vanilla-tilt.js/index.html">https://micku7zu.github.io/vanilla-tilt.js/index.html</a></li><li>parallax.js<br>对智能设备的方向引擎响应的视差<br><a href="http://matthew.wagerfield.com/parallax/">http://matthew.wagerfield.com/parallax/</a></li><li>signature_pad<br>基于 HTML5 canvas 的平滑签名绘制<br><a href="http://szimek.github.io/signature_pad/">http://szimek.github.io/signature_pad/</a></li><li>compressorjs<br>JavaScript 图像压缩器<br><a href="https://fengyuanchen.github.io/compressorjs/">https://fengyuanchen.github.io/compressorjs/</a></li><li>eva.js<br>用于创建交互式游戏项目的前端游戏引擎<br><a href="https://eva.js.org/">https://eva.js.org/</a></li><li>d3<br>基于数据来操作文档的JavaScript库<br><a href="https://d3js.org/">https://d3js.org/</a><h3 id="动画插件"><a href="#动画插件" class="headerlink" title="动画插件"></a>动画插件</h3></li><li>countUp.js<br>无依赖项的轻量级Javascript类，可用于快速创建以更有趣的方式显示数字数据的动画<br><a href="https://inorganik.github.io/countUp.js/">https://inorganik.github.io/countUp.js/</a></li><li>impress.js<br>CSS3 转换和过渡的强大功能的演示框架<br><a href="https://impress.js.org/">https://impress.js.org/</a></li><li>Anime.js<br>轻量级的 JavaScript 动画库，具有简单而强大的 API<br><a href="https://animejs.com/">https://animejs.com/</a></li><li>tween.js<br>用于简单动画的 JavaScript 补间引擎，包含优化的 Robert Penner 方程<br><a href="http://tweenjs.github.io/tween.js/">http://tweenjs.github.io/tween.js/</a></li><li>Popmotion<br>制作数字、颜色和复杂字符串的动画。该库的主要动画功能只有5kb左右，整个库的容量在12kb左右<br><a href="https://popmotion.io/">https://popmotion.io/</a></li><li>Typed.js<br>打字动画库<br><a href="https://mattboldt.com/demos/typed-js/">https://mattboldt.com/demos/typed-js/</a></li><li>vivus.js<br>在 SVG 上制作绘图动画的 JavaScript 库<br><a href="https://maxwellito.github.io/vivus/">https://maxwellito.github.io/vivus/</a></li><li>ScrollReveal<br>在元素滚入或滚出视口时为其制作动画<br><a href="https://scrollrevealjs.org/">https://scrollrevealjs.org/</a></li><li>canvas-confetti<br>按需 五彩纸屑<br><a href="https://catdad.github.io/canvas-confetti/">https://catdad.github.io/canvas-confetti/</a></li><li>GSAP<br>强大的 JavaScript 工具集，构建适用于所有主流浏览器的高性能动画。动画 CSS、SVG、画布、React、Vue、WebGL、颜色、字符串、运动路径、通用对象<br><a href="https://greensock.com/">https://greensock.com/</a></li><li>lax.js<br>轻量级（&lt;4kb gzipped）香草 JavaScript 库，可在您滚动时创建流畅美观的动画<br><a href="https://github.com/alexfoxy/lax.js">https://github.com/alexfoxy/lax.js</a></li><li>animxyz<br>AnimXYZ 可帮助您为您的网站创建、自定义和组合动画<br><a href="https://animxyz.com/">https://animxyz.com/</a></li><li>svg.js<br>用于操作和动画 SVG 的轻量级库<br><a href="https://svgjs.dev/docs/3.0/">https://svgjs.dev/docs/3.0/</a></li><li>zdog<br>用于画布和 SVG 的扁平、圆形、设计师友好的伪 3D 引擎<br><a href="https://zzz.dog/">https://zzz.dog/</a></li><li>dynamics.js<br>用于创建基于物理的动画的 JavaScript 库<br><a href="http://dynamicsjs.com/">http://dynamicsjs.com/</a></li><li>Proton<br>Javascript粒子动画库<br><a href="https://drawcall.github.io/Proton/">https://drawcall.github.io/Proton/</a><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3></li><li>SheetJS<br>可读取和导出excel的工具库，功能强大，支持格式众多，支持xls、xlsx、ods(一种OpenOffice专有表格文件格式)等十几种格式<br><a href="https://sheetjs.com/">https://sheetjs.com/</a></li><li>revogrid<br>具有高级定制功能的强大虚拟数据表格<br><a href="https://revolist.github.io/revogrid/">https://revolist.github.io/revogrid/</a></li><li> FileSaver.js<br>客户端保存文件的解决方案<br><a href="https://eligrey.com/blog/saving-generated-files-on-the-client-side/">https://eligrey.com/blog/saving-generated-files-on-the-client-side/</a></li><li>jszip<br>使用 Javascript 创建、读取和编辑 .zip 文件<br><a href="https://stuk.github.io/jszip/">https://stuk.github.io/jszip/</a></li><li>Print.js<br>帮助从网络打印的小型 javascript 库<br><a href="https://printjs.crabbly.com/">https://printjs.crabbly.com/</a></li><li>mammoth.js<br>将 Word 文档（.docx 文件）转换为 HTML<br><a href="https://github.com/mwilliamson/mammoth.js">https://github.com/mwilliamson/mammoth.js</a></li><li>StreamSaver.js<br>直接异步将流写入文件系统，适合大文件下载<br><a href="https://jimmywarting.github.io/StreamSaver.js/example.html">https://jimmywarting.github.io/StreamSaver.js/example.html</a></li><li>PDF.js<br>使用 HTML5 构建的可移植文档格式 (PDF) 查看器<br><a href="https://github.com/mozilla/pdf.js">https://github.com/mozilla/pdf.js</a></li><li>pdfmake<br>用于服务器端和客户端的 PDF 文档生成库<br><a href="http://pdfmake.org/">http://pdfmake.org/</a></li><li>pdf-lib<br>在任何 JavaScript 环境中创建和修改 PDF 文档<br><a href="https://pdf-lib.js.org/">https://pdf-lib.js.org/</a></li><li>uppy<br>JavaScript 文件上传器<br><a href="https://uppy.io/">https://uppy.io/</a><h3 id="音视频"><a href="#音视频" class="headerlink" title="音视频"></a>音视频</h3></li><li>moovie.js<br>专注于电影的 HTML5 播放器<br><a href="https://mooviejs.com/">https://mooviejs.com/</a></li><li>meyda.js<br>JavaScript 音频特征提取库<br><a href="https://meyda.js.org/">https://meyda.js.org/</a></li><li>howler.js<br>Javascript 音频库<br><a href="https://howlerjs.com/">https://howlerjs.com/</a></li><li>flv.js<br>HTML5 FLV 播放器<br><a href="https://github.com/Bilibili/flv.js/">https://github.com/Bilibili/flv.js/</a></li><li>plyr<br>HTML5、YouTube 和 Vimeo 播放器<br><a href="https://plyr.io/">https://plyr.io/</a></li><li>xgplayer 西瓜播放器<br>网络视频和音频播放器库<br><a href="https://h5player.bytedance.com/">https://h5player.bytedance.com/</a></li><li>hls.js<br>可在支持 MSE 的浏览器中播放 HLS<br><a href="https://hls-js.netlify.app/demo/">https://hls-js.netlify.app/demo/</a><h3 id="智能化"><a href="#智能化" class="headerlink" title="智能化"></a>智能化</h3></li><li>tensorflow.js<br>用于在浏览器和 Node.js 训练和部署机器学习模型<br><a href="https://tensorflow.google.cn/">https://tensorflow.google.cn/</a></li><li> face-api.js<br>用于在浏览器和 nodejs 中使用 tensorflow.js 进行人脸检测和人脸识别的 JavaScript API<br><a href="https://github.com/justadudewhohacks/face-api.js/">https://github.com/justadudewhohacks/face-api.js/</a></li><li>tracking.js<br>将不同的计算机视觉算法和技术引入浏览器环境。通过使用现代HTML5规范，我们使您能够进行实时颜色跟踪，人脸检测等<br><a href="https://trackingjs.com/">https://trackingjs.com/</a></li><li>pose-animator<br>识别出人类的表情变化和肢体动作，并将其映射到2D矢量图型上<br><a href="https://github.com/yemount/pose-animator">https://github.com/yemount/pose-animator</a></li><li>ar-cutpaste<br>手机上预装工具，对着目标物体拍摄，即可将图像复制粘贴进 Photoshop<br><a href="https://github.com/cyrildiagne/ar-cutpaste">https://github.com/cyrildiagne/ar-cutpaste</a></li><li>imgcook<br>专注以 Sketch、PSD、静态图片等形式的视觉稿作为输入，通过智能化技术一键生成可维护的前端代码<br><a href="https://www.imgcook.com/">https://www.imgcook.com/</a></li><li>nsfwjs<br>帮助快速识别不合时宜的图像<br><a href="https://nsfwjs.com/">https://nsfwjs.com/</a><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3></li><li>Vditor<br>Markdown 编辑器，支持所见即所得、即时渲染（类似 Typora）和分屏预览模式，由 TypeScript 实现，支持原生 JavaScript、Vue、React、Angular，提供桌面版<br><a href="https://b3log.org/vditor/">https://b3log.org/vditor/</a></li><li> monaco-editor<br>为VS Code提供支持的代码编辑器<br><a href="https://microsoft.github.io/monaco-editor/">https://microsoft.github.io/monaco-editor/</a></li><li>bytemd<br>用 Svelte 构建的 Markdown 编辑器组件。它也可以用于其他库/框架，例如 React、Vue 和 Angular<br><a href="https://bytemd.netlify.app/">https://bytemd.netlify.app/</a></li><li>wangEditor<br>Typescript 开发的 Web 富文本编辑器， 轻量、简洁、易用、开源免费<br><a href="https://www.wangeditor.com/">https://www.wangeditor.com/</a></li><li>mavonEditor<br>Markdown 编辑器，支持多种个性化功能<br><a href="http://www.mavoneditor.com/">http://www.mavoneditor.com/</a></li><li>quill<br>API 驱动的富文本编辑器<br><a href="https://quilljs.com/">https://quilljs.com/</a></li><li>codemirror5<br>浏览器内代码编辑器<br><a href="https://codemirror.net/">https://codemirror.net/</a></li><li>marked<br>用于解析 Markdown 的编译器<br><a href="https://marked.js.org/">https://marked.js.org/</a></li><li>tiptap<br>完全控制文本编辑器体验。它是可定制的，带有大量扩展，是开源的，并且有大量的文档<br><a href="https://tiptap.dev/">https://tiptap.dev/</a><h3 id="2D-3D"><a href="#2D-3D" class="headerlink" title="2D 3D"></a>2D 3D</h3></li><li>dat.gui<br>在 JavaScript 中更改变量的轻量级图形用户界面<br><a href="https://github.com/dataarts/dat.gui">https://github.com/dataarts/dat.gui</a></li><li>Three.js<br>易于使用、轻量级、跨浏览器的通用 3D 库<br><a href="https://threejs.org/">https://threejs.org/</a></li><li>Draco 3D<br>缩和解压缩 3D 几何网格和点云。它旨在改进 3D 图形的存储和传输<br><a href="https://google.github.io/draco/">https://google.github.io/draco/</a></li><li>stats.js<br>JavaScript 性能监视器<br><a href="http://mrdoob.github.io/stats.js/">http://mrdoob.github.io/stats.js/</a></li><li>matter-js<br>一个用于 web 的 JavaScript 2D 物理引擎<br><a href="https://brm.io/matter-js/">https://brm.io/matter-js/</a></li><li>Oimo.js<br>用于 javascript 的轻量级 3d 物理引擎，是OimoPhysics<br>的完整 javascript 转换<br><a href="http://lo-th.github.io/Oimo.js/#basic">http://lo-th.github.io/Oimo.js/#basic</a></li><li>ammo.js<br>使用 Emscripten 将 Bullet 物理引擎直接移植到 JavaScript<br><a href="https://github.com/kripken/ammo.js">https://github.com/kripken/ammo.js</a><h3 id="其他常用"><a href="#其他常用" class="headerlink" title="其他常用"></a>其他常用</h3></li><li>Auto.js Pro<br>Android上支持Node.js的JavaScript自动化和编程软件<br><a href="https://pro.autojs.org/">https://pro.autojs.org/</a></li><li>Inquirer.js<br>实现命令行交互式界面的工具集合<br><a href="https://github.com/SBoudrias/Inquirer.js/">https://github.com/SBoudrias/Inquirer.js/</a></li><li>chalk<br>命令行美化工具<br><a href="https://github.com/chalk/chalk">https://github.com/chalk/chalk</a></li><li>Timer.js<br>简单而轻量级的库，无需任何依赖项来创建和管理计时器<br><a href="https://github.com/husa/timer.js">https://github.com/husa/timer.js</a></li><li>day.js<br>极简的 JavaScript 库，它使用与 Moment.js 兼容的 API 为现代浏览器解析、验证、操作和显示日期和时间<br><a href="https://day.js.org/">https://day.js.org/</a></li><li>Socket.io<br>支持基于事件的实时双向通信<br><a href="https://socket.io/">https://socket.io/</a></li><li>The Algorithms<br>GitHub 最大的开源算法库<br><a href="https://the-algorithms.com/">https://the-algorithms.com/</a></li><li>log-symbols<br>各种日志级别的彩色符号<br><a href="https://github.com/sindresorhus/log-symbols">https://github.com/sindresorhus/log-symbols</a></li><li>plop<br>微型生成器框架，使整个团队可以轻松地创建具有一定一致性的文件<br><a href="https://plopjs.com/">https://plopjs.com/</a></li><li>prompts<br>轻量级、美观且用户友好的交互式提示<br><a href="https://github.com/terkelg/prompts">https://github.com/terkelg/prompts</a></li><li>shelljs<br>基于 Node.js API 的 Unix shell 命令的可移植（Windows/Linux/macOS）实现<br><a href="https://www.npmjs.com/package/shelljs">https://www.npmjs.com/package/shelljs</a></li><li>figlet<br>浏览器控制台个性化输出<br><a href="https://github.com/patorjk/figlet.js">https://github.com/patorjk/figlet.js</a></li><li>picocolors<br>终端修改输出字符样式的 npm 包，比 chalk 体积小 14 倍，速度快 2 倍<br><a href="https://github.com/alexeyraspopov/picocolors">https://github.com/alexeyraspopov/picocolors</a></li><li>cac<br>用于构建 CLI 应用程序的 JavaScript 库，体积数倍小于 commander 和 yargs<br><a href="https://github.com/cacjs/cac">https://github.com/cacjs/cac</a></li><li>npm-run-all<br>用于并行或顺序运行多个 npm 脚本的 CLI 工具<br><a href="https://github.com/mysticatea/npm-run-all">https://github.com/mysticatea/npm-run-all</a></li><li>node-semver<br>语义化版本号管理的 npm 库，比如 判断一个版本是否合法，判断版本号命名是否正确，两个版本谁大谁小之类 等<br><a href="https://github.com/npm/node-semver">https://github.com/npm/node-semver</a></li><li>puppeteer<br>在浏览器中手动执行的大多数操作都可以使用 Puppeteer 完成<br>生成页面的屏幕截图和 PDF。<br>抓取 SPA（单页应用程序）并生成预渲染内容<br>自动化表单提交、UI 测试、键盘输入等。<br><a href="https://pptr.dev/">https://pptr.dev/</a></li><li>temir<br>用vue组件来编写命令行界面应用的工具<br><a href="https://github.com/webfansplz/temir">https://github.com/webfansplz/temir</a></li><li>enquirer<br>适用于 Node.js 的时尚、直观且用户友好的提示<br><a href="https://github.com/enquirer/enquirer">https://github.com/enquirer/enquirer</a><h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3></li><li>uni-app<br>使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序等13个平台<br><a href="https://uniapp.dcloud.io/">https://uniapp.dcloud.io/</a></li><li>react-native<br>使用 React 构建移动应用程序<br><a href="https://reactnative.dev/">https://reactnative.dev/</a></li><li>Flutter<br>Google 的开源框架，用于构建美观、本机编译的多平台应用程序<br><a href="https://flutter.dev/">https://flutter.dev/</a></li><li>chameleon<br>一套代码运行多端，一端所见即多端所见<br><a href="http://cml.didi.cn/">http://cml.didi.cn/</a></li><li>Taro<br>遵循 React 语法规范的多端统一开发框架<br><a href="https://taro.zone/">https://taro.zone/</a></li><li>Electron<br>使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序<br><a href="https://www.electronjs.org/">https://www.electronjs.org/</a></li><li>MicroApp<br>京东零售推出的微前端框架。基于webcomponent-like渲染，从组件思维实现微前端，旨在降低上手难度，提高工作效率<br><a href="https://micro-zoe.github.io/micro-app/">https://micro-zoe.github.io/micro-app/</a></li><li>Tauri<br>使用 Web 前端构建更小、更快、更安全的桌面应用程序<br><a href="https://tauri.studio/">https://tauri.studio/</a></li><li>Hippy<br>跨平台的开发框架，旨在帮助开发者编写一次，运行在三个平台（iOS、Android 和 Web）上<br><a href="https://hippyjs.org/#/">https://hippyjs.org/#/</a></li><li>无界<br>基于 Web Components + iframe 微前端框架，具备成本低、速度快、原生隔离、功能强等一系列优点。<br><a href="https://wujie-micro.github.io/doc/">https://wujie-micro.github.io/doc/</a></li><li>qiankun<br>微前端的实现，基于single-spa。它旨在使构建生产就绪的微前端架构系统变得更加容易和轻松。<br><a href="https://qiankun.umijs.org/zh">https://qiankun.umijs.org/zh</a><h3 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h3></li><li>pub.dev<br>Dart和Flutter应用程序的官方包存储库<br><a href="https://pub.dev/">https://pub.dev/</a></li><li>awesome-flutter-plugins<br>尽可能收集好用的Flutter插件以便更效率的开发<br><a href="https://github.com/jahnli/awesome-flutter-plugins">https://github.com/jahnli/awesome-flutter-plugins</a></li><li>flutter-widget.live<br>使用 Flutter for web 构建的网站，用于在线实时预览小部件示例。<br><a href="https://flutter-widget.live/basics/introduction">https://flutter-widget.live/basics/introduction</a></li><li>google Icons<br>Google Material Design 图标<br><a href="https://fonts.google.com/icons">https://fonts.google.com/icons</a></li><li>Json To Dart Model<br>Json 转 Dart Model类<br><a href="https://ashamp.github.io/jsonToDartModel/">https://ashamp.github.io/jsonToDartModel/</a></li><li>flutter  awesome<br>很棒的列表，其中包含优秀的 Flutter 库和工具<br><a href="https://flutterawesome.com/">https://flutterawesome.com/</a></li><li>LottieFiles<br>免费 Lottie 动画文件、工具和插件<br><a href="https://lottiefiles.com/">https://lottiefiles.com/</a><h3 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h3></li><li>vue-cli-plugin-electron-builde<br>使用Electron轻松构建用于桌面的Vue.js应用<br><a href="https://nklayman.github.io/vue-cli-plugin-electron-builder/">https://nklayman.github.io/vue-cli-plugin-electron-builder/</a></li><li>electron-about-window<br>为Electron 提供 “关于此应用程序” 窗口。<br><a href="https://github.com/rhysd/electron-about-window">https://github.com/rhysd/electron-about-window</a></li><li>nativefier<br>使任何网页成为桌面应用程序<br><a href="https://github.com/nativefier/nativefier">https://github.com/nativefier/nativefier</a><h3 id="Uniapp"><a href="#Uniapp" class="headerlink" title="Uniapp"></a>Uniapp</h3></li><li>Grace UI<br>兼容微信小程序及uni-app的优秀前端框架，以flex布局为基础，提供了丰富的组件及界面库GraceUI<br><a href="https://www.graceui.com/">https://www.graceui.com/</a></li><li>uView<br>全面兼容nvue的uni-app生态框架，全面的组件和便捷的工具<br><a href="https://www.uviewui.com/">https://www.uviewui.com/</a></li><li>ThorUI<br>轻量、简洁、全面的移动端组件库<br><a href="https://thorui.cn/doc/">https://thorui.cn/doc/</a><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3></li><li>cssfx<br>精美简单的点击复制 CSS 效果<br><a href="https://cssfx.netlify.app/">https://cssfx.netlify.app/</a></li><li>Twitter Hashflags<br>Twitter 点赞动画<br><a href="https://hashflags.io/">https://hashflags.io/</a></li><li>UI Snippets<br>UI 片段的集合<br><a href="https://ui-snippets.dev/">https://ui-snippets.dev/</a></li><li>SpinKit<br>CSS 动画的加载指示器<br><a href="https://tobiasahlin.com/spinkit/">https://tobiasahlin.com/spinkit/</a></li><li>animate.css<br>强大的预设css3动画库<br><a href="https://animate.style/">https://animate.style/</a></li><li>犸良<br>一站式动效制作平台，通过海量的动效素材以及可视化编辑能力，帮助零基础的用户轻松完成动效制作<br><a href="https://design.alipay.com/emotion">https://design.alipay.com/emotion</a></li><li>animista<br>Css 动画<br><a href="https://animista.net/">https://animista.net/</a></li><li>lordicon<br>功能强大的精心制作的动画图标库<br><a href="https://lordicon.com/">https://lordicon.com/</a></li><li>svg-spinners<br>24 x 24 dp的svg格式loading加载器<br><a href="https://github.com/n3r4zzurr0/svg-spinners">https://github.com/n3r4zzurr0/svg-spinners</a></li><li>magic<br>具有炫酷效果的 CSS3 动画<br><a href="https://www.minimamente.com/project/magic/">https://www.minimamente.com/project/magic/</a></li><li>Hover.css<br>CSS3 驱动的悬停效果，可应用于链接、按钮、徽标、SVG、特色图像等<br><a href="http://ianlunn.github.io/Hover/">http://ianlunn.github.io/Hover/</a></li><li>eva-icons<br>超过 480 个制作精美的开源图标。SVG、Sketch、Web 字体和动画支持<br><a href="https://akveo.github.io/eva-icons/#/">https://akveo.github.io/eva-icons/#/</a><h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3></li><li>normalize.css<br>CSS 重置的现代替代方案<br><a href="http://necolas.github.io/normalize.css/">http://necolas.github.io/normalize.css/</a></li><li> Squoosh<br>对比 tinypng 有【更好的】压缩效果<br><a href="https://squoosh.app/">https://squoosh.app/</a><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3></li><li>Manypixels<br>收集无版权插图的网站，提供 SVG / PNG 格式下载，并且允许更改颜色<br><a href="https://www.manypixels.co/gallery">https://www.manypixels.co/gallery</a></li><li>U钙网<br>免费的LOGO在线设计制作工具<br><a href="https://www.uugai.com/">https://www.uugai.com/</a></li><li>design-blocks<br>一组 170 多个基于 Bootstrap 的设计块，可用于创建干净的现代网站<br><a href="https://froala.com/design-blocks/">https://froala.com/design-blocks/</a></li><li>unDraw<br>精美的 SVG 插画集<br><a href="https://undraw.co/illustrations">https://undraw.co/illustrations</a></li><li>Ira Design<br>通过调配渐变色、搭配手绘组件定制插画<br><a href="https://iradesign.io/gallery/illustrations">https://iradesign.io/gallery/illustrations</a></li><li>lukasz adam<br>免费 SVG 插画<br><a href="https://lukaszadam.com/illustrations">https://lukaszadam.com/illustrations</a></li><li>pixeltrue<br>创建令人叹为观止的项目的插图<br><a href="https://www.pixeltrue.com/packs">https://www.pixeltrue.com/packs</a></li><li>3dicons<br>3d图标库<br><a href="https://3dicons.co/">https://3dicons.co/</a></li><li>css-buttons<br>100 个现代 CSS 按钮<br><a href="https://css-buttons.web.app/">https://css-buttons.web.app/</a></li><li>uiset<br>优质免费的UI设计资源<br><a href="https://uiset.com/">https://uiset.com/</a></li><li>error404<br>404插画页面<br><a href="https://error404.fun/">https://error404.fun/</a></li><li>ui8<br>5,745 个精选设计资源，为您的创意工作流程注入活力<br><a href="https://ui8.net/">https://ui8.net/</a><h2 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h2><h3 id="代码工具"><a href="#代码工具" class="headerlink" title="代码工具"></a>代码工具</h3></li><li>gitignore.io<br>为项目创建有用的 .gitignore 文件<br><a href="https://www.toptal.com/developers/gitignore">https://www.toptal.com/developers/gitignore</a></li><li>any-rule<br>常用正则大全, 支持web / vscode / idea / Alfred Workflow多平台<br><a href="https://any86.github.io/any-rule/">https://any86.github.io/any-rule/</a></li><li>30-seconds-of-code<br>满足多种语言开发需求的简短代码片段<br><a href="https://www.30secondsofcode.org/">https://www.30secondsofcode.org/</a></li><li>github-readme-stats<br>为 github 自述文件动态生成的统计信息<br><a href="https://github.com/anuraghazra/github-readme-stats">https://github.com/anuraghazra/github-readme-stats</a></li><li>cz-cli<br>规范提交说明的git工具<br><a href="http://commitizen.github.io/cz-cli/">http://commitizen.github.io/cz-cli/</a></li><li> commitlint<br>git commit 校验工具<br><a href="https://commitlint.js.org/#/">https://commitlint.js.org/#/</a></li><li>husky<br>Git hooks 工具，可以防止使用 Git hooks 的一些不好的 commit 或者 push<br><a href="https://typicode.github.io/husky/#/">https://typicode.github.io/husky/#/</a></li><li>lint-staged<br>代码提交之前,进行代码规则检查并尝试修复，能够确保进入git库的代码都是符合代码规则<br><a href="https://github.com/okonet/lint-staged">https://github.com/okonet/lint-staged</a></li><li>anywhere<br>随启随用的静态文件服务器<br><a href="https://github.com/JacksonTian/anywhere">https://github.com/JacksonTian/anywhere</a></li><li>code996<br>统计 Git 项目的 commit 时间分布，进而推导出这个项目的编码工作强度<br><a href="https://hellodigua.github.io/code996/#/">https://hellodigua.github.io/code996/#/</a><h3 id="图像工具"><a href="#图像工具" class="headerlink" title="图像工具"></a>图像工具</h3></li><li>bigjpg<br>使用度卷积神经网络。它会将噪点和锯齿的部分进行补充，实现图片的无损放大<br><a href="https://bigjpg.com/">https://bigjpg.com/</a></li><li>jpghd<br>使用人工智能 AI 超分模型和深度学习技术来将低清破损有噪点图片处理成高画质高分辨率图片同时支持破损老照片修复和老照片上色<br><a href="https://jpghd.com/">https://jpghd.com/</a></li><li>bigmp4<br>使用智能 AI 模型，能将视频无损高清放大、增强画质、智能补帧使画面丝滑流畅栩栩如生同时支持黑白视频上色和慢动作<br><a href="https://bigmp4.com/">https://bigmp4.com/</a></li><li>imglarger<br>基于强大的机器学习可在不降低质量的情况下提高图像分辨率<br><a href="https://imglarger.com/">https://imglarger.com/</a></li><li>unscreen<br>智能AI去除视频背景在线神器<br><a href="https://www.unscreen.com/">https://www.unscreen.com/</a></li><li>阿里妈妈创意中心<br>阿里智能文案，智能抠图工具<br><a href="https://chuangyi.taobao.com/">https://chuangyi.taobao.com/</a><h3 id="文件转换"><a href="#文件转换" class="headerlink" title="文件转换"></a>文件转换</h3></li><li>ALL TO ALL<br>全类型的在线文件转换平台，免费、快速，无须下载安装任何软件<br><a href="https://www.alltoall.net/">https://www.alltoall.net/</a></li><li>Convertio<br>将文件转换成任意格式<br><a href="https://convertio.co/zh/">https://convertio.co/zh/</a><h2 id="Vue3生态工具"><a href="#Vue3生态工具" class="headerlink" title="Vue3生态工具"></a>Vue3生态工具</h2><h3 id="1-Web-UI库"><a href="#1-Web-UI库" class="headerlink" title="1.Web UI库"></a>1.Web UI库</h3></li><li> ElementUI Plus<br>一套为开发者、设计师和产品经理准备的基于 Vue 3.0 的桌面端组件库<br><a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></li><li> Ant Design of Vue<br>Ant Design 的 Vue 实现，开发和服务于企业级后台产品<br><a href="https://www.antdv.com/docs/vue/introduce-cn">https://www.antdv.com/docs/vue/introduce-cn</a></li><li> BalmUI<br>基于谷歌的 Material Design，附带 Vue 插件和指令，以及从简单到复杂的高度可定制组件<br><a href="https://next-material.balmjs.com/">https://next-material.balmjs.com/</a></li><li> Naive UI<br>图森Vue3的组件库，文档完整，我项目中经常使用<br><a href="https://www.naiveui.com/zh-CN/os-theme">https://www.naiveui.com/zh-CN/os-theme</a></li><li>arco.design<br>字节跳动企业级产品设计系统，支持React和Vue双版本<br><a href="https://arco.design/">https://arco.design/</a></li><li>Quasar<br>轻松构建高性能和高质量的Vue.js 3用户界面，好用，但没有中文文档<br><a href="https://quasar.dev/">https://quasar.dev/</a></li><li>iDUX<br>Vue3.x 的 UI 组件库，完全使用 TypeScript 开发<br><a href="https://idux.site/">https://idux.site/</a></li><li>TDesign<br>腾讯业务团队在服务业务过程中沉淀的一套企业级设计体系<br><a href="https://tdesign.tencent.com/">https://tdesign.tencent.com/</a><br><a href="https://tdesign.tencent.com/vue-next/overview">https://tdesign.tencent.com/vue-next/overview</a></li><li>PrimeVue<br>易于使用、多功能、高性能的 Vue UI 组件库<br><a href="https://www.primefaces.org/primevue/">https://www.primefaces.org/primevue/</a></li><li>DevUI<br>华为基于 Vue3 和 DevUI 设计的 UI 组件<br><a href="https://vue-devui.github.io/">https://vue-devui.github.io/</a></li><li>vuestic-ui<br>Vue 3 的免费和开源 UI 库 ,UI非常好看，并且有可用后台管理界面。<br><a href="https://vuestic.dev/">https://vuestic.dev/</a></li><li>Headless UI<br>完全无样式、完全可访问的 UI 组件，旨在与 Tailwind CSS 完美集成。<br><a href="https://headlessui.com/">https://headlessui.com/</a></li><li> View UI Plus<br>基于 Vue.js 3 的企业级 UI 组件库和前端解决方案<br><a href="https://www.iviewui.com/">https://www.iviewui.com/</a><h3 id="2-移动UI库"><a href="#2-移动UI库" class="headerlink" title="2.移动UI库"></a>2.移动UI库</h3></li><li> Vant<br>有赞轻量、可靠的移动端组件库<br><a href="https://vant-contrib.gitee.io/vant/#/zh-CN">https://vant-contrib.gitee.io/vant/#/zh-CN</a></li><li> NutUI<br>京东风格的轻量级移动端 Vue 组件库，非常适合移动端电商使用。<br><a href="https://nutui.jd.com/#/">https://nutui.jd.com/#/</a></li><li>Varlet<br>Material 风格移动端组件库 ，文档非常齐全。<br><a href="https://varlet.gitee.io/varlet-ui/#/zh-CN/home">https://varlet.gitee.io/varlet-ui/#/zh-CN/home</a></li><li> nutui-bingo<br>京东基于 NutUI 的抽奖组件库，助力营销活动和小游戏场景。<br><a href="https://nutui.jd.com/bingo/#/">https://nutui.jd.com/bingo/#/</a><h3 id="3-相关工具"><a href="#3-相关工具" class="headerlink" title="3.相关工具"></a>3.相关工具</h3></li><li> unplugin-vue-components<br>antfu 按需组件自动导入，开箱即用地支持 Vue 2 和 Vue 3，Tree-shakable，只注册你使用的组件，附有流行UI 库的内置解析器。<br><a href="https://www.npmjs.com/package/unplugin-vue-components">https://www.npmjs.com/package/unplugin-vue-components</a></li><li> vuex-persistedstate<br>在页面重新加载之间保持并重载您的 Vuex 状态<br><a href="https://github.com/robinvdvleuten/vuex-persistedstate">https://github.com/robinvdvleuten/vuex-persistedstate</a></li><li>  vuex-persist<br>支持 Typescript 的Vuex插件，它能够将应用程序的状态保存到持久存储中，例如 Cookies 或 localStorage<br><a href="https://championswimmer.in/vuex-persist/">https://championswimmer.in/vuex-persist/</a></li><li> @vueuse/gesture<br>手势库，使应用程序具有交互性<br><a href="https://gesture.vueuse.org/">https://gesture.vueuse.org/</a></li><li>unplugin-auto-import<br>antfu 自动导入 Vite、Webpack、Rollup 和 esbuild 的 API。支持 TypeScript。<br><a href="https://github.com/antfu/unplugin-auto-import">https://github.com/antfu/unplugin-auto-import</a></li><li>pinia-plugin-persistedstate<br>Pinia 商店的可配置持久性<br><a href="https://github.com/prazdevs/pinia-plugin-persistedstate">https://github.com/prazdevs/pinia-plugin-persistedstate</a></li><li><a href="https://vue-termui.dev/">https://vue-termui.dev/</a><br>一个基于 Vue.js 的终端 UI 框架，可让您轻松构建现代终端应用程序<br><a href="https://vue-termui.dev/">https://vue-termui.dev/</a><h3 id="4-可视化"><a href="#4-可视化" class="headerlink" title="4.可视化"></a>4.可视化</h3></li><li>Pdfvuer<br>DF 查看器，使用 Mozilla 的 PDF.js，支持 Vue2 和 Vue3<br><a href="https://arkokoley.github.io/pdfvuer/">https://arkokoley.github.io/pdfvuer/</a></li><li>vue3-marquee<br>无缝滚动组件<br><a href="https://vue3-marquee.vercel.app/">https://vue3-marquee.vercel.app/</a></li><li>Vue-ECharts<br>百度ECharts 的 Vue.js 组件。 配置参考Echarts官方 基于 ECharts v5+ 开发，适用于Vue.js 2/3。<br><a href="https://vue-echarts.dev/">https://vue-echarts.dev/</a></li><li> iconpark<br>字节跳动出品，将一个SVG图标转化为多个主题，并生成React图标，Vue图标，svg图标<br><a href="https://iconpark.oceanengine.com/home">https://iconpark.oceanengine.com/home</a><h3 id="5-插件"><a href="#5-插件" class="headerlink" title="5.插件"></a>5.插件</h3></li><li> vue-multiselect-next<br>Vue.js 的通用选择/多选/标记组件<br><a href="https://vue-multiselect.js.org/">https://vue-multiselect.js.org/</a></li><li> vue-print-nb<br>用于印刷、简单、快速、方便、轻便的指令包装器<br><a href="https://github.com/Power-kxLee/vue-print-nb">https://github.com/Power-kxLee/vue-print-nb</a></li><li> vue-i18n-next<br>Vue3的国际化插件<br><a href="https://vue-i18n.intlify.dev/">https://vue-i18n.intlify.dev/</a></li><li>vue-cropper<br>简单的vue图片裁剪插件<br><a href="http://github.xyxiao.cn/vue-cropper/example/">http://github.xyxiao.cn/vue-cropper/example/</a></li><li> Grid Layout<br>Vue.js 的网格布局系统<br><a href="https://jbaysolutions.github.io/">https://jbaysolutions.github.io/</a></li><li>Vue Qrcode Reader<br>允许在不离开浏览器的情况下检测和解码二维码<br><a href="https://gruhn.github.io/vue-qrcode-reader/">https://gruhn.github.io/vue-qrcode-reader/</a></li><li>Makeit Captcha<br>基于 Vue3 + Vite + Canvas 开发的滑块验证码，动态生成验证滑块，结合后端的二次校验，能有效的避免被抓取模拟验证<a href="https://admin.makeit.vip/components/captcha">https://admin.makeit.vip/components/captcha</a></li><li>vue3-clipboard<br>Vue 3 的 clipboard.js<br><a href="https://github.com/soerenmartius/vue3-clipboard">https://github.com/soerenmartius/vue3-clipboard</a></li><li> vue.draggable<br>基于Sortable.js的Vue 3拖放组件<br><a href="https://sortablejs.github.io/vue.draggable.next/#/simple">https://sortablejs.github.io/vue.draggable.next/#/simple</a></li><li>BetterScroll<br>解决移动端（已支持 PC）各种滚动场景需求的插件。<br><a href="https://better-scroll.github.io/docs/zh-CN/">https://better-scroll.github.io/docs/zh-CN/</a><h3 id="6-相关生态"><a href="#6-相关生态" class="headerlink" title="6.相关生态"></a>6.相关生态</h3></li><li>Vue 插件库<br><a href="https://www.vue365.cn/">https://www.vue365.cn/</a></li><li>Pinia<br>轻量级状态管理库，API 设计更接近Vuex 5的提案<br><a href="https://pinia.vuejs.org/">https://pinia.vuejs.org/</a></li><li>Nuxt Modules<br>Nuxt 发现我们的模块列表以增强您的Nuxt 项目<br><a href="https://modules.nuxtjs.org/">https://modules.nuxtjs.org/</a></li><li>Nuxt 3<br>轻量级应用框架,可用来创建服务端渲染 (SSR) 应用<br><a href="https://v3.nuxtjs.org/">https://v3.nuxtjs.org/</a></li><li> vuepress<br>Vue 驱动的静态网站生成器<br><a href="https://v2.vuepress.vuejs.org/zh/">https://v2.vuepress.vuejs.org/zh/</a></li><li>VueUse<br>强大的 Vue 组合实用程序集合<br><a href="https://vueuse.org/">https://vueuse.org/</a><h3 id="7-动画"><a href="#7-动画" class="headerlink" title="7.动画"></a>7.动画</h3></li><li>vue-starport<br>带有动画的跨路由共享组件<br><a href="https://vue-starport.netlify.app/">https://vue-starport.netlify.app/</a></li><li>@vueuse/motion<br>Vue Composables 让你的组件动起来<br><a href="https://motion.vueuse.org/">https://motion.vueuse.org/</a><h3 id="8-音视频"><a href="#8-音视频" class="headerlink" title="8.音视频"></a>8.音视频</h3></li><li>@vueuse/sound<br>用于播放音效的 Vue 组合<br><a href="https://sound.vueuse.org/">https://sound.vueuse.org/</a><h2 id="全栈-后端"><a href="#全栈-后端" class="headerlink" title="全栈-后端"></a>全栈-后端</h2><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3></li><li>isomorphic-git<br>用于节点和浏览器的 git 纯 JavaScript 实现<br><a href="https://isomorphic-git.org/">https://isomorphic-git.org/</a></li><li>jsonwebtoken<br>node.js 的 JsonWebToken 实现<br><a href="https://github.com/auth0/node-jsonwebtoken">https://github.com/auth0/node-jsonwebtoken</a></li><li>Qiniu SDK<br>七牛资源（云）存储 SDK for Node.js<br><a href="https://developer.qiniu.com/kodo/sdk/nodejs">https://developer.qiniu.com/kodo/sdk/nodejs</a></li><li>koa-body<br>功能齐全的koa正文解析器中间件，支持multipart、urlencoded和json请求正文，提供与 Express 的 bodyParser 相同的功能<br><a href="https://github.com/koajs/koa-body">https://github.com/koajs/koa-body</a></li><li>koa-json-error<br>纯Koa JSON 应用程序的错误处理程序，显示堆栈跟踪<br><a href="https://github.com/koajs/json-error">https://github.com/koajs/json-error</a></li><li>koa-jwt<br>用于验证 JSON Web 令牌的 Koa 中间件<br><a href="https://github.com/koajs/jwt">https://github.com/koajs/jwt</a></li><li>koa-router<br>Koa 的路由器中间件<br><a href="https://github.com/koajs/router">https://github.com/koajs/router</a></li><li>koa2-cors<br>koa2 的 CORS 中间件<br><a href="https://github.com/zadzbw/koa2-cors">https://github.com/zadzbw/koa2-cors</a></li><li>koa-sslify<br>为 Koa.js 实施 HTTPS 中间件<br><a href="https://github.com/turboMaCk/koa-sslify">https://github.com/turboMaCk/koa-sslify</a></li><li>superagent-proxy<br>允许您通过某种代理来代理 HTTP 请求<br><a href="https://github.com/TooTallNate/superagent-proxy">https://github.com/TooTallNate/superagent-proxy</a></li><li>node-http-proxy-agen<br>HTTP 端点的 HTTP(s) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-http-proxy-agent">https://github.com/TooTallNate/node-http-proxy-agent</a></li><li>https-proxy-agent<br>HTTPS 端点的 HTTP(s) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-https-proxy-agent">https://github.com/TooTallNate/node-https-proxy-agent</a></li><li>socks-proxy-agent<br>用于 HTTP 和 HTTPS 的 SOCKS (v4/v5) 代理“http.Agent”实现<br><a href="https://github.com/TooTallNate/node-socks-proxy-agent">https://github.com/TooTallNate/node-socks-proxy-agent</a></li><li>simple-get<br>发出 http get 请求的最简单方法。支持 HTTPS、重定向、gzip/deflate、小于 100 行的流<br><a href="https://github.com/feross/simple-get">https://github.com/feross/simple-get</a></li><li>commander.js<br>node.js命令行界面的完整解决方案<br><a href="https://github.com/tj/commander.js">https://github.com/tj/commander.js</a></li><li>ora<br>命令行 loading 动效<br><a href="https://github.com/sindresorhus/ora">https://github.com/sindresorhus/ora</a></li><li>dotenv<br>从 .env 为 nodejs 项目加载环境变量<br><a href="https://github.com/motdotla/dotenv">https://github.com/motdotla/dotenv</a></li><li>FFCreator<br>基于node.js的高速视频制作库<br><a href="https://tnfe.github.io/FFCreator/#/">https://tnfe.github.io/FFCreator/#/</a></li><li>sharp<br>高性能 Node.js 图像处理，调整 JPEG、PNG、WebP、AVIF 和 TIFF 图像大小的最快模块<br><a href="https://sharp.pixelplumbing.com/">https://sharp.pixelplumbing.com/</a></li><li>node-fs-extra<br>强大的文件操作库， 是 Nodejs fs 模块 的增强版<br><a href="https://github.com/jprichardson/node-fs-extra">https://github.com/jprichardson/node-fs-extra</a></li><li>chokidar<br>用于文件监控的库，解决兼容性不好、无法监听、监听多次 等大量影响性能的问题<br><a href="https://paulmillr.com/">https://paulmillr.com/</a></li><li>fast-glob<br>快速批量导入、读取文件的库<br><a href="https://github.com/mrmlnc/fast-glob">https://github.com/mrmlnc/fast-glob</a></li><li>peerflix<br>node.js 的流式 torrent 客户端<br><a href="https://github.com/mafintosh/peerflix">https://github.com/mafintosh/peerflix</a><h3 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h3></li><li>Nginx<br>高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务<br><a href="https://blog.redis.com.cn/doc/">https://blog.redis.com.cn/doc/</a></li><li>PM2<br>Node进程管理工具，如性能监控、自动重启、负载均衡等<br><a href="https://pm2.keymetrics.io/docs/usage/process-management/">https://pm2.keymetrics.io/docs/usage/process-management/</a></li><li>nodemon<br>监视 node.js 应用程序中的任何更改并自动重新启动服务器<br><a href="https://nodemon.io/">https://nodemon.io/</a></li><li>RobotJS<br>Node.js 桌面自动化，控制鼠标、键盘和阅读屏幕等<br><a href="http://robotjs.io/">http://robotjs.io/</a></li><li>Jenkins<br>领先的开源自动化服务器，Jenkins 提供了数百个插件来支持构建、部署和自动化任何项目<br><a href="https://www.jenkins.io/">https://www.jenkins.io/</a></li><li>nexe<br>将 node.js 应用程序中创建一个可执行文件<br><a href="https://github.com/nexe/nexe">https://github.com/nexe/nexe</a></li><li>debug<br>模仿 Node.js 核心调试技术的小型 JavaScript 调试实用程序。适用于 Node.js 和 Web 浏览器<br><a href="https://github.com/debug-js/debug">https://github.com/debug-js/debug</a><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3></li><li>mongoose<br>旨在在异步环境中工作的 MongoDB 对象建模<br><a href="https://mongoosejs.com/">https://mongoosejs.com/</a></li><li>GraphQL<br>用于 API 的查询语言也是一个满足你数据查询的运行时<br><a href="https://graphql.cn/">https://graphql.cn/</a></li><li>lowdb数据库<br>适用于Node，Electron和浏览器的小型JSON数据库。由Lodash驱动<br><a href="https://github.com/typicode/lowdb">https://github.com/typicode/lowdb</a></li><li>nedb<br>适用于Node.js，nw.js，Electron和浏览器的嵌入式持久性数据库或内存数据库,API是MongoDB的子集<br><a href="https://github.com/louischatriot/nedb">https://github.com/louischatriot/nedb</a><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3></li><li>网易云音乐 API<br>全部接口已升级到最新，具备登录接口,多达200多个接口<br><a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/">https://binaryify.github.io/NeteaseCloudMusicApi/#/</a></li><li>Node-SpliderApi<br>基于 Node+Express 网络爬虫 API 接口 包括前端开发日报、kugou 音乐、前端 top 框架排行、妹纸福利、搞笑视频、段子笑话、各类视频新闻资讯 热点详情接口数据,接口数据更新目标<br><a href="https://ecitlm.github.io/Node-SpliderApi/">https://ecitlm.github.io/Node-SpliderApi/</a></li><li>聚合数据<br>免费向开发者提供全国车辆违章查询API,天气API,基站数据,移动联通基站,电信基站,覆盖国内外1000多个主要城市公共交通信息数据<br><a href="https://www.juhe.cn/">https://www.juhe.cn/</a></li><li>极速数据<br>提供各类生活数据API,方便开发者快速简单的开发APP、软件及其他服务平台<br><a href="https://www.jisuapi.com/">https://www.jisuapi.com/</a></li><li>京东万象<br>供金融、电商、运营商数据,免费数据,热门数据,学籍数据,企业诉讼数据,实名认证,征信数据,质检等多种数据<br><a href="https://wx.jdcloud.com/api">https://wx.jdcloud.com/api</a></li><li>QQ音乐API<br>通过Web网页版请求QQ音乐接口数据<br><a href="https://rain120.github.io/qq-music-api/#/">https://rain120.github.io/qq-music-api/#/</a></li><li>万维易源<br>一站式全网API调用平台<br><a href="https://www.showapi.com/">https://www.showapi.com/</a></li><li>TP5 Splider Api<br>基于Thinkphp5+phpQuery 网络爬虫抓取数据接口 统一输出接口数据api<br><a href="https://ecitlm.github.io/TP5_Splider/#/">https://ecitlm.github.io/TP5_Splider/#/</a></li><li>Roll API<br>提供开发中常用数据的一个稳定聚合Api接口<br><a href="https://www.mxnzp.com/doc/list">https://www.mxnzp.com/doc/list</a></li><li>Open API<br>收集可用的Open APIs<br><a href="https://www.wanandroid.com/openapis">https://www.wanandroid.com/openapis</a></li><li>天行数据<br>160多个免费接口，接口高度统一，简单易用，毫秒级响应<br><a href="https://www.tianapi.com/">https://www.tianapi.com/</a></li><li>free-api<br>免费API,收集免费的接口服务<br><a href="https://www.free-api.com/">https://www.free-api.com/</a></li><li>douban-imdb-api<br>基于豆瓣、IMDB、烂番茄评分的电影电视剧双语(中英)数据api接口<br><a href="https://www.iqi360.com/p/douban-imdb-api">https://www.iqi360.com/p/douban-imdb-api</a><h3 id="框架-1"><a href="#框架-1" class="headerlink" title="框架"></a>框架</h3></li><li>Koa<br>基于 Node.js 平台的下一代 web 开发框架<br><a href="https://koajs.com/">https://koajs.com/</a></li><li>Express<br>用于Node.js 的快速、独立、简约的 Web 框架<br><a href="https://expressjs.com/">https://expressjs.com/</a></li><li>egg.js<br>为企业级框架和应用而生<br><a href="https://www.eggjs.org/">https://www.eggjs.org/</a></li><li>Nest.js<br>构建高效且可扩展的服务器端应用程序的渐进式Node.js框架<br><a href="https://nestjs.com/">https://nestjs.com/</a></li></ul><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
    
    
    <categories>
      
      <category>转载</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>angular打包错误ERROR in Illegal State issue when giving angular build</title>
    <link href="/2022/10/18/javascript/javascript%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%863%E4%B8%AA%E4%B8%80%E7%BB%84/"/>
    <url>/2022/10/18/javascript/javascript%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%863%E4%B8%AA%E4%B8%80%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<br><br><span class="hljs-keyword">const</span> result = [];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;a.length; i+=<span class="hljs-number">3</span>) &#123;<br>  <span class="hljs-keyword">const</span> r = a.slice(<span class="hljs-number">3</span>, i+<span class="hljs-number">3</span>);<br>  <span class="hljs-built_in">console</span>.log(r);<br>  result.push(r)<br>&#125;<br><span class="hljs-built_in">console</span>.log(result, <span class="hljs-string">&#x27;result&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>javascript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flutter 打包release部分功能无法使用</title>
    <link href="/2021/03/27/flutter/flutter-%E6%89%93%E5%8C%85release%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/03/27/flutter/flutter-%E6%89%93%E5%8C%85release%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><ul><li>flutter本地测试debug打包、运行功能正常使用，但是打包release之后发现部分功能无法使用，直接卡到首屏，路由也不执行跳转</li><li>本地运行 <code>flutter run --release --verbose</code> 发现没有任何错误</li></ul><h2 id="问题猜测"><a href="#问题猜测" class="headerlink" title="问题猜测"></a>问题猜测</h2><ul><li>打包release版本参数配置问题，混淆，或者tree shaking 部分代码没有生效?</li></ul><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ul><li><p>参考flutter中文网   android版本打包release </p><ul><li><a href="https://flutterchina.club/android-release/">https://flutterchina.club/android-release/</a></li></ul></li><li><p>参考 release打包闪退</p><ul><li><a href="https://segmentfault.com/a/1190000021610587">https://segmentfault.com/a/1190000021610587</a></li></ul></li><li><p>直接在 app/build.gradle配置</p><p><img src="https://raw.githubusercontent.com/EightDoor/-/master/flutter%E6%89%93%E5%8C%85release.png" alt="flutter打包release"></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">minifyEnabled <span class="hljs-literal">false</span> <span class="hljs-comment">//删除无用代码</span><br>shrinkResources <span class="hljs-literal">false</span> <span class="hljs-comment">//删除无用资源</span><br></code></pre></td></tr></table></figure></li><li><p>重新打包问题解决</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打包</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>typora 自动上传图片到gitee</title>
    <link href="/2021/03/25/tool/typora-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0gitee/"/>
    <url>/2021/03/25/tool/typora-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0gitee/</url>
    
    <content type="html"><![CDATA[<h2 id="直接安装picGo软件-https-github-com-Molunerfinn-PicGo-releases-tag-v2-3-0-beta-4"><a href="#直接安装picGo软件-https-github-com-Molunerfinn-PicGo-releases-tag-v2-3-0-beta-4" class="headerlink" title="直接安装picGo软件 https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4"></a>直接安装picGo软件 <a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4">https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0-beta.4</a></h2><h2 id="1-使用-node-安装-PicGo-Core"><a href="#1-使用-node-安装-PicGo-Core" class="headerlink" title="1. 使用 node 安装 PicGo-Core"></a>1. 使用 node 安装 PicGo-Core</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">// npm 命令执行速度过慢的话，我们可以使用一下淘宝的镜像 <br>npm install -g picgo --registry=https://registry.npm.taobao.org<br><br>// 安装完成以后测试一下是否安装成功<br>picgo -v<br></code></pre></td></tr></table></figure><h2 id="2-使用-picgo-命令安装-gitee-uploader-插件"><a href="#2-使用-picgo-命令安装-gitee-uploader-插件" class="headerlink" title="2. 使用 picgo 命令安装 gitee-uploader 插件"></a>2. 使用 picgo 命令安装 gitee-uploader 插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">picgo install gitee-uploader<br></code></pre></td></tr></table></figure><h2 id="3-使用-picgo-命令设置-uploader"><a href="#3-使用-picgo-命令设置-uploader" class="headerlink" title="3. 使用 picgo 命令设置 uploader"></a>3. 使用 picgo 命令设置 uploader</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">picgo set uploader<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">C:\Users\Run\Desktop&gt;picgo set uploader<br>? Choose a(n) uploader (Use arrow keys)<br>❯ gitee<br>  smms<br>  tcyun<br>  github<br>  qiniu<br>  imgur<br>  aliyun<br>  upyun<br>(Move up and down to reveal more choices)<br><br>? Choose a(n) uploader gitee<br>? repo: xxxx/image<br>? branch: master<br>? token: 5a34fa3f348d556...<br>? path: 2020<br>? customPath: 年月<br>? customUrl: https://gitee.com/xxxx/image/raw/master/<br>[PicGo SUCCESS]: Configure config successfully!<br></code></pre></td></tr></table></figure><h2 id="4-配置-Typro-上传服务设定"><a href="#4-配置-Typro-上传服务设定" class="headerlink" title="4. 配置 Typro 上传服务设定"></a>4. 配置 Typro 上传服务设定</h2><p><strong>重点是 <code>自定义命令</code> 的组成部分：</strong> <code>[your node path] [your picgo path] upload</code></p><table><thead><tr><th>键</th><th>值</th></tr></thead><tbody><tr><td>上传服务</td><td>Custom Command</td></tr><tr><td>自定义命令</td><td>D:\nodejs\node.exe D:\nodejs\node_global\node_modules\picgo\bin\picgo upload</td></tr></tbody></table><p><strong>注意：配置完成后可以点击 <code>验证图片上传选项</code> 来测试是否配置成功</strong></p><h2 id="5-完整的配置文件"><a href="#5-完整的配置文件" class="headerlink" title="5. 完整的配置文件"></a>5. 完整的配置文件</h2><p><strong>以下是参照 <a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html">PicGo-Core官方文档</a> 的进行的配置</strong></p><p>首先我们需要找到我们的配置文件，<strong>picgo</strong> 的默认配置文件在不同系统的目录不太一样：<br>linux 和 macOS 均为 <code>~/.picgo/config.json</code><br>windows 则为 <code>C:\Users\&#123;你的用户名&#125;\.picgo\config.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;picBed&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;current&quot;</span>: <span class="hljs-string">&quot;gitee&quot;</span>,<br>    <span class="hljs-attr">&quot;gitee&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;repo&quot;</span>: <span class="hljs-string">&quot;xxxx/image&quot;</span>,<br>      <span class="hljs-attr">&quot;branch&quot;</span>: <span class="hljs-string">&quot;master&quot;</span>,<br>      <span class="hljs-attr">&quot;token&quot;</span>: <span class="hljs-string">&quot;5a34fa3f348d556...&quot;</span>,<br>      <span class="hljs-attr">&quot;path&quot;</span>: <span class="hljs-string">&quot;2020&quot;</span>,<br>      <span class="hljs-attr">&quot;customPath&quot;</span>: <span class="hljs-string">&quot;yearMonth&quot;</span>,<br>      <span class="hljs-attr">&quot;customUrl&quot;</span>: <span class="hljs-string">&quot;https://gitee.com/xxxx/image/raw/master/&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;uploader&quot;</span>: <span class="hljs-string">&quot;gitee&quot;</span>,<br>    <span class="hljs-attr">&quot;transformer&quot;</span>: <span class="hljs-string">&quot;path&quot;</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;picgoPlugins&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;lastSync&quot;</span>: <span class="hljs-string">&quot;2020-07-30 10:29:26&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="6-解决-文件大于1M，登录后可见-的问题"><a href="#6-解决-文件大于1M，登录后可见-的问题" class="headerlink" title="6. 解决 文件大于1M，登录后可见 的问题"></a>6. 解决 <code>文件大于1M，登录后可见</code> 的问题</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">按照步骤 1<span class="hljs-string">-6</span> 我们确实成功地配置了一个免费好用的 Gitee图床，简单使用也没有什么问题。可是当我们上传的图片大小超过 1M 后：OMG，图片无法正常显示，在浏览器中打开图片的地址，直接跳转到 Gitee 登录界面，并且出现出现了很扎心的 文件大于1M，登录后可见 文字的提示。关键是这个文件大小限制还没有办法解决，凉凉！！！<br></code></pre></td></tr></table></figure><p>凉凉？不存在的！ 俗话说：办法总比困难多。我们访问 git 仓库中文件的方式并不是只有一种，更何况它只是一些静态的资源文件。所以是不是只要我们想办法配置一个简单的HTTP服务就可以了。问题迎刃而解：Gitee 官方给我们提供了一种供博客 / 门户 / 开源项目网站 / 开源项目静态效果演示用途的 Git Pages服务。</p><h3 id="7-1-开启-Git-Pages-服务"><a href="#7-1-开启-Git-Pages-服务" class="headerlink" title="7.1 开启 Git Pages 服务"></a>7.1 开启 Git Pages 服务</h3><ol><li>进入到阁下 Gitee 图床 所在仓库的页面，找到 <code>服务</code> -&gt; <code>Gitee Pages</code></li></ol><p><img src="https://img-blog.csdnimg.cn/img_convert/080f6d5f182dc73d35ab0e3e737285bd.png" alt="开启 Git Pages 服务"></p><ol start="2"><li><p>无需修改任何配置。直接点击 <code>启动</code>按钮，等待服务启动完毕即可。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/701a8a18c3690a6e95dfec7cc41bedf8.png" alt="image"></p></li></ol><h3 id="7-2-更新图片访问的路径"><a href="#7-2-更新图片访问的路径" class="headerlink" title="7.2 更新图片访问的路径"></a>7.2 更新图片访问的路径</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">当我们的 图床仓库 开启 <span class="hljs-selector-tag">Git</span> <span class="hljs-selector-tag">Pages</span> 服务后，就会得到一个专属的网站地址，格式为：“ 个人空间地址<span class="hljs-selector-class">.gitee</span><span class="hljs-selector-class">.io</span>/仓库名” 。<br><br>例如：<span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">zi1</span><span class="hljs-selector-class">.gitee</span><span class="hljs-selector-class">.io</span>/<span class="hljs-selector-tag">pic</span>，则我们访问该图床中的静态资源文件的路径为 <span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">zi1</span><span class="hljs-selector-class">.gitee</span><span class="hljs-selector-class">.io</span>/<span class="hljs-selector-tag">pic</span> + 仓库中文件的可见路径。<br></code></pre></td></tr></table></figure><p>比如：你的仓库中的 picture 目录下的 1.jpg 的图片文件： <code>picture/1.jpg</code>，则我们访问该图片的路径为：<code>http://zi1.gitee.io/pic/picture/1.jpg</code></p><p><img src="https://img-blog.csdnimg.cn/img_convert/51947acc69b927a6ee04401c776543aa.png" alt="image"></p><h2 id="8-开启-Git-Pages-后完整的配置文件"><a href="#8-开启-Git-Pages-后完整的配置文件" class="headerlink" title="8. 开启 Git Pages 后完整的配置文件"></a>8. 开启 Git Pages 后完整的配置文件</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;picBed&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;current&quot;</span>: <span class="hljs-string">&quot;gitee&quot;</span>,<br>    <span class="hljs-attr">&quot;gitee&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;repo&quot;</span>: <span class="hljs-string">&quot;xxxx/image&quot;</span>,<br>      <span class="hljs-attr">&quot;branch&quot;</span>: <span class="hljs-string">&quot;master&quot;</span>,<br>      <span class="hljs-attr">&quot;token&quot;</span>: <span class="hljs-string">&quot;5a34fa3f348d556...&quot;</span>,<br>      <span class="hljs-attr">&quot;path&quot;</span>: <span class="hljs-string">&quot;2020&quot;</span>,<br>      <span class="hljs-attr">&quot;customPath&quot;</span>: <span class="hljs-string">&quot;yearMonth&quot;</span>,<br>      <span class="hljs-attr">&quot;customUrl&quot;</span>: <span class="hljs-string">&quot;https://xxxx.gitee.io/image/&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;uploader&quot;</span>: <span class="hljs-string">&quot;gitee&quot;</span>,<br>    <span class="hljs-attr">&quot;transformer&quot;</span>: <span class="hljs-string">&quot;path&quot;</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;picgoPlugins&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">&quot;picgo-plugin-gitee-uploader&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;lastSync&quot;</span>: <span class="hljs-string">&quot;2020-10-12 09:23:39&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>D:\nodejs\node.exe D:\nodejs\node_global\node_modules\picgo\bin\picgo upload</p><p>C:\Program Files\nodejs\node.exe C:\Program Files\nodejs\node_modules\picgo\bin\picgo upload</p>]]></content>
    
    
    <categories>
      
      <category>typora</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx配置静态资源加载</title>
    <link href="/2021/03/25/tool/nginx%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD/"/>
    <url>/2021/03/25/tool/nginx%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<ul><li><p>alias配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">location</span> /img/ &#123;<br>        <span class="hljs-attribute">alias</span> /home/;<br>        <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>访问路径是 <code>ip:端口/img </code><ul><li>最终去本地硬盘找的路径是  /home (系统文件)  </li></ul></li></ul></li><li><p>root配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">location</span> /img/ &#123;<br>        <span class="hljs-attribute">root</span> /home/;<br>        <span class="hljs-attribute">autoindex</span> <span class="hljs-literal">on</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>访问路径是 <code>ip:端口/img </code><ul><li>最终去本地硬盘找的路径是  /home/img  (系统文件)  </li></ul></li></ul></li></ul><h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><ul><li><a href="https://blog.csdn.net/a760352276/article/details/106774599">https://blog.csdn.net/a760352276/article/details/106774599</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx资源加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA 下 SpringBoot 自动重启、热部署   spring-boot-devtools或者JRebel</title>
    <link href="/2021/03/24/tool/IDEA-%E4%B8%8B-SpringBoot-%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF%E3%80%81%E7%83%AD%E9%83%A8%E7%BD%B2-spring-boot-devtools%E6%88%96%E8%80%85JRebel/"/>
    <url>/2021/03/24/tool/IDEA-%E4%B8%8B-SpringBoot-%E8%87%AA%E5%8A%A8%E9%87%8D%E5%90%AF%E3%80%81%E7%83%AD%E9%83%A8%E7%BD%B2-spring-boot-devtools%E6%88%96%E8%80%85JRebel/</url>
    
    <content type="html"><![CDATA[<h2 id="spring-boot-devtools"><a href="#spring-boot-devtools" class="headerlink" title="spring-boot-devtools"></a>spring-boot-devtools</h2><ul><li><p>idea设置 settings<br><img src="https://img-blog.csdnimg.cn/20210323215742292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTI0NTE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>ctrl+shift+A 打开搜索Registry<br><img src="https://img-blog.csdnimg.cn/20210323215900812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTI0NTE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>点击一下 然后搜索 app，打上对钩<br><img src="https://img-blog.csdnimg.cn/20210323220139441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTI0NTE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>pom文件添加</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!-- spring-boot-devtools --&gt;<br>&lt;dependency&gt;<br>  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>  &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;<br>  &lt;optional&gt;true&lt;/optional&gt; &lt;!-- 表示依赖不会传递 --&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure></li><li><p>插件位置配置一下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;build&gt;<br>  &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;/finalName&gt;<br>  &lt;plugins&gt;<br>    &lt;plugin&gt;<br>      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;<br>      &lt;configuration&gt;<br>        &lt;fork&gt;true&lt;/fork&gt; &lt;!-- 如果没有该配置，devtools不会生效 --&gt;<br>      &lt;/configuration&gt;<br>    &lt;/plugin&gt;<br>  &lt;/plugins&gt;<br>&lt;/build&gt;<br></code></pre></td></tr></table></figure></li></ul><ul><li>查看窗口更改代码应该直接就自动重启了<h2 id="JRebel方式"><a href="#JRebel方式" class="headerlink" title="JRebel方式"></a>JRebel方式</h2></li><li>不用重启，直接就热更新了</li><li>现在plugins安装 <code>jrebel</code></li><li>收费的，需要破解一下，白嫖的香~<ul><li> <a href="https://www.guidgen.com/">在线生成GUID地址</a></li><li>根据反向代理服务器地址拼接激活地址<br>  服务器地址： <a href="https://jrebel.qekang.com/%7BGUID%7D">https://jrebel.qekang.com/{GUID}</a></li><li>PS：如果失效刷新GUID替换就可以！<ul><li>打开jrebel 激活面板 . 选择Connect to online licensing service .<br><img src="https://img-blog.csdnimg.cn/20210324084824297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTI0NTE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul></li></ul></li></ul><ul><li>破解成功，开始愉快地编码<br><img src="https://img-blog.csdnimg.cn/20210323221116383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTI0NTE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo,githubpage自定义域名失效</title>
    <link href="/2020/12/09/tool/hexo,githubpage%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/"/>
    <url>/2020/12/09/tool/hexo,githubpage%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/</url>
    
    <content type="html"><![CDATA[<ul><li><p>使用 gitpage 功能将博客托管在了 github 上，并配置 CNAME 将自己的域名解析了过去，在 github 的仓库设置中开始 custom domain 的功能，这时候就可以直接使用自己的域名访问啦。</p></li><li><p>但是发现一个问题是，每次配置 custom domain 之后，再次 hexo deploy 之后，custom domain 会被重置失效。</p></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在 hexo 生成的博客的 source 目录下新建一个 CNAME 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，gitpage 里的 custom domain 都被重置掉啦。</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows安装cygwin</title>
    <link href="/2020/12/09/tool/maven%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/"/>
    <url>/2020/12/09/tool/maven%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li><p>maven<a href="https://maven.apache.org/download.cgi">官网地址</a></p><p><img src="https://img-blog.csdnimg.cn/20181229170024552" alt="img"></p></li><li><p>配置环境变量</p><ul><li><p>在配置之前请将JDK安装好。</p></li><li><p>添加<strong>M2_HOME</strong>:对应Maven的解压目录即可。</p><p><img src="https://img-blog.csdnimg.cn/20181229170024647" alt="img"></p></li><li><p>编辑<strong>Path</strong>环境变量：</p><p><img src="https://img-blog.csdnimg.cn/20181229170024688" alt="img"></p><ul><li><p>添加   <strong>%M2_HOME%\bin</strong></p><p><img src="https://img-blog.csdnimg.cn/20181229170024740" alt="img"></p></li></ul></li><li><p>测试，在cmd窗口输入<code>mvn -v</code>查看</p><ul><li><p>显示如下即配置成功</p><p><img src="https://img-blog.csdnimg.cn/20181229170024780" alt="img"></p></li></ul></li></ul></li></ul><h3 id="为什么慢"><a href="#为什么慢" class="headerlink" title="为什么慢"></a>为什么慢</h3><p>执行 mvn 各种命令的时候，默认是去 maven 官方镜像源获取需要安装的具体软件信息</p><p>默认源地址在国外，从国内访问的速度肯定比较慢</p><h3 id="方法一：-配置只在当前项目生效"><a href="#方法一：-配置只在当前项目生效" class="headerlink" title="方法一： 配置只在当前项目生效"></a>方法一： 配置只在当前项目生效</h3><ul><li><p>在 pom.xml 文件内添加以下配置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;repositories&gt;<br>    &lt;repository&gt;<br>        &lt;id&gt;ali-maven&lt;/id&gt;<br>        &lt;url&gt;http:<span class="hljs-comment">//maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br>    &lt;/repository&gt;<br>&lt;/repositories&gt;<br></code></pre></td></tr></table></figure></li></ul><h3 id="方法二：-配置全局生效"><a href="#方法二：-配置全局生效" class="headerlink" title="方法二： 配置全局生效"></a>方法二： 配置全局生效</h3><ul><li><p>修改 settings.xml 文件</p><ul><li><p>找到 mirrors 标签，在里面加入以下内容</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;mirror&gt;<br>    &lt;id&gt;alimaven&lt;/id&gt;<br>    &lt;name&gt;aliyun maven&lt;/name&gt;<br>    &lt;url&gt;http:<span class="hljs-comment">//maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br>    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;<br>&lt;/mirror&gt;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>可以在以下路径查找到 settings.xml 文件</p><ol><li><p>(用户家目录)/.m2/settings.xml</p></li><li><p>(maven 安装目录)/conf/settings.xml，</p><p>如果是 Mac 系统通过 brew 命令安装的，在这里：</p><p>/usr/local/Cellar/maven/(版本号)/libexec/conf/settings.xml</p></li></ol></li></ul><h4 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a><a href="https://blog.csdn.net/huo920/article/details/82082403">参考地址</a></h4><h3 id="详细配置"><a href="#详细配置" class="headerlink" title="详细配置"></a>详细配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">interactiveMode</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">usePluginRegistry</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">offline</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">pluginGroups</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">servers</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>阿里云公共仓库<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/central<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>repo1<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>central repo<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>apache snapshots<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>阿里云阿帕奇仓库<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/apache-snapshots<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">proxies</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">activeProfiles</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">repositories</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">layout</span>&gt;</span>default<span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>MavenCentral<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmavenApache<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/apache-snapshots<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">repositories</span>&gt;</span>             <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>settings.xml配置文件(最简单的可用版本)</title>
    <link href="/2020/12/09/tool/settings.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <url>/2020/12/09/tool/settings.xml%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br> <br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="hljs-comment">or more contributor license agreements.  See the NOTICE file</span><br><span class="hljs-comment">distributed with this work for additional information</span><br><span class="hljs-comment">regarding copyright ownership.  The ASF licenses this file</span><br><span class="hljs-comment">to you under the Apache License, Version 2.0 (the</span><br><span class="hljs-comment">&quot;License&quot;); you may not use this file except in compliance</span><br><span class="hljs-comment">with the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">Unless required by applicable law or agreed to in writing,</span><br><span class="hljs-comment">software distributed under the License is distributed on an</span><br><span class="hljs-comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span><br><span class="hljs-comment">KIND, either express or implied.  See the License for the</span><br><span class="hljs-comment">specific language governing permissions and limitations</span><br><span class="hljs-comment">under the License.</span><br><span class="hljs-comment">--&gt;</span><br> <br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment"> | This is the configuration file for Maven. It can be specified at two levels:</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span><br><span class="hljs-comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |                 <span class="hljs-doctag">NOTE:</span> This location can be overridden with the CLI option:</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |                 -s /path/to/user/settings.xml</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span><br><span class="hljs-comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span><br><span class="hljs-comment"> |                 installation). It&#x27;s normally provided in</span><br><span class="hljs-comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |                 <span class="hljs-doctag">NOTE:</span> This location can be overridden with the CLI option:</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |                 -gs /path/to/global/settings.xml</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> | The sections in this sample file are intended to give you a running start at</span><br><span class="hljs-comment"> | getting the most out of your Maven installation. Where appropriate, the default</span><br><span class="hljs-comment"> | values (values used when the setting is not specified) are provided.</span><br><span class="hljs-comment"> |</span><br><span class="hljs-comment"> |--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- localRepository</span><br><span class="hljs-comment">   | The path to the local repository maven will use to store artifacts.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | Default: $&#123;user.home&#125;/.m2/repository   --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D:\devEnviroment\maven\repo<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br> <br> <br>  <span class="hljs-comment">&lt;!-- interactiveMode</span><br><span class="hljs-comment">   | This will determine whether maven prompts you when it needs input. If set to false,</span><br><span class="hljs-comment">   | maven will use a sensible default value, perhaps based on some other setting, for</span><br><span class="hljs-comment">   | the parameter in question.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | Default: true</span><br><span class="hljs-comment">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span><br><span class="hljs-comment">  --&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- offline</span><br><span class="hljs-comment">   | Determines whether maven should attempt to connect to the network when executing a build.</span><br><span class="hljs-comment">   | This will have an effect on artifact downloads, artifact deployment, and others.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | Default: false</span><br><span class="hljs-comment">  &lt;offline&gt;false&lt;/offline&gt;</span><br><span class="hljs-comment">  --&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- pluginGroups</span><br><span class="hljs-comment">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span><br><span class="hljs-comment">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span><br><span class="hljs-comment">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span><br><span class="hljs-comment">   |--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">pluginGroups</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- pluginGroup</span><br><span class="hljs-comment">     | Specifies a further group identifier to use for plugin lookup.</span><br><span class="hljs-comment">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span><br><span class="hljs-comment">    --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroups</span>&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- proxies</span><br><span class="hljs-comment">   | This is a list of proxies which can be used on this machine to connect to the network.</span><br><span class="hljs-comment">   | Unless otherwise specified (by system property or command-line switch), the first proxy</span><br><span class="hljs-comment">   | specification in this list marked as active will be used.</span><br><span class="hljs-comment">   |--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">proxies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- proxy</span><br><span class="hljs-comment">     | Specification for one proxy, to be used in connecting to the network.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">    &lt;proxy&gt;</span><br><span class="hljs-comment">      &lt;id&gt;optional&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;active&gt;true&lt;/active&gt;</span><br><span class="hljs-comment">      &lt;protocol&gt;http&lt;/protocol&gt;</span><br><span class="hljs-comment">      &lt;username&gt;proxyuser&lt;/username&gt;</span><br><span class="hljs-comment">      &lt;password&gt;proxypass&lt;/password&gt;</span><br><span class="hljs-comment">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span><br><span class="hljs-comment">      &lt;port&gt;80&lt;/port&gt;</span><br><span class="hljs-comment">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span><br><span class="hljs-comment">    &lt;/proxy&gt;</span><br><span class="hljs-comment">    --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">proxies</span>&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- servers</span><br><span class="hljs-comment">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span><br><span class="hljs-comment">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span><br><span class="hljs-comment">   |--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">servers</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- server</span><br><span class="hljs-comment">     | Specifies the authentication information to use when connecting to a particular server, identified by</span><br><span class="hljs-comment">     | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     | <span class="hljs-doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span><br><span class="hljs-comment">     |       used together.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">    &lt;server&gt;</span><br><span class="hljs-comment">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;username&gt;repouser&lt;/username&gt;</span><br><span class="hljs-comment">      &lt;password&gt;repopwd&lt;/password&gt;</span><br><span class="hljs-comment">    &lt;/server&gt;</span><br><span class="hljs-comment">    --&gt;</span><br> <br>    <span class="hljs-comment">&lt;!-- Another sample, using keys to authenticate.</span><br><span class="hljs-comment">    &lt;server&gt;</span><br><span class="hljs-comment">      &lt;id&gt;siteServer&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span><br><span class="hljs-comment">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span><br><span class="hljs-comment">    &lt;/server&gt;</span><br><span class="hljs-comment">    --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">servers</span>&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- mirrors</span><br><span class="hljs-comment">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span><br><span class="hljs-comment">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</span><br><span class="hljs-comment">   | it to several places.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | That repository definition will have a unique id, so we can create a mirror reference for that</span><br><span class="hljs-comment">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span><br><span class="hljs-comment">   | server for that repository.</span><br><span class="hljs-comment">   |--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- mirror</span><br><span class="hljs-comment">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span><br><span class="hljs-comment">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span><br><span class="hljs-comment">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">    &lt;mirror&gt;</span><br><span class="hljs-comment">      &lt;id&gt;mirrorId&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span><br><span class="hljs-comment">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span><br><span class="hljs-comment">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span><br><span class="hljs-comment">    &lt;/mirror&gt;</span><br><span class="hljs-comment">     --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- profiles</span><br><span class="hljs-comment">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span><br><span class="hljs-comment">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span><br><span class="hljs-comment">   | specific paths and repository locations which allow the build to work in the local environment.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</span><br><span class="hljs-comment">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span><br><span class="hljs-comment">   | dereferenced during the build process to configure the cactus plugin.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span><br><span class="hljs-comment">   | section of this document (settings.xml) - will be discussed later. Another way essentially</span><br><span class="hljs-comment">   | relies on the detection of a system property, either matching a particular value for the property,</span><br><span class="hljs-comment">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span><br><span class="hljs-comment">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span><br><span class="hljs-comment">   | Finally, the list of active profiles can be specified directly from the command line.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   | <span class="hljs-doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span><br><span class="hljs-comment">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span><br><span class="hljs-comment">   |       variables for plugins in the POM.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">   |--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- profile</span><br><span class="hljs-comment">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span><br><span class="hljs-comment">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span><br><span class="hljs-comment">     | or the command line, profiles have to have an ID that is unique.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     | An encouraged best practice for profile identification is to use a consistent naming convention</span><br><span class="hljs-comment">     | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span><br><span class="hljs-comment">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span><br><span class="hljs-comment">     | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span><br><span class="hljs-comment">    &lt;profile&gt;</span><br><span class="hljs-comment">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;activation&gt;</span><br><span class="hljs-comment">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span><br><span class="hljs-comment">      &lt;/activation&gt;</span><br><span class="hljs-comment">      &lt;repositories&gt;</span><br><span class="hljs-comment">        &lt;repository&gt;</span><br><span class="hljs-comment">          &lt;id&gt;jdk14&lt;/id&gt;</span><br><span class="hljs-comment">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span><br><span class="hljs-comment">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span><br><span class="hljs-comment">          &lt;layout&gt;default&lt;/layout&gt;</span><br><span class="hljs-comment">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span><br><span class="hljs-comment">        &lt;/repository&gt;</span><br><span class="hljs-comment">      &lt;/repositories&gt;</span><br><span class="hljs-comment">    &lt;/profile&gt;</span><br><span class="hljs-comment">    --&gt;</span><br> <br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span><br><span class="hljs-comment">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span><br><span class="hljs-comment">     | might hypothetically look like:</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     | ...</span><br><span class="hljs-comment">     | &lt;plugin&gt;</span><br><span class="hljs-comment">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span><br><span class="hljs-comment">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     |   &lt;configuration&gt;</span><br><span class="hljs-comment">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span><br><span class="hljs-comment">     |   &lt;/configuration&gt;</span><br><span class="hljs-comment">     | &lt;/plugin&gt;</span><br><span class="hljs-comment">     | ...</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">     | <span class="hljs-doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span><br><span class="hljs-comment">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span><br><span class="hljs-comment">     |</span><br><span class="hljs-comment">    &lt;profile&gt;</span><br><span class="hljs-comment">      &lt;id&gt;env-dev&lt;/id&gt;</span><br><span class="hljs-comment">      &lt;activation&gt;</span><br><span class="hljs-comment">        &lt;property&gt;</span><br><span class="hljs-comment">          &lt;name&gt;target-env&lt;/name&gt;</span><br><span class="hljs-comment">          &lt;value&gt;dev&lt;/value&gt;</span><br><span class="hljs-comment">        &lt;/property&gt;</span><br><span class="hljs-comment">      &lt;/activation&gt;</span><br><span class="hljs-comment">      &lt;properties&gt;</span><br><span class="hljs-comment">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span><br><span class="hljs-comment">      &lt;/properties&gt;</span><br><span class="hljs-comment">    &lt;/profile&gt;</span><br><span class="hljs-comment">    --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br> <br>  <span class="hljs-comment">&lt;!-- activeProfiles</span><br><span class="hljs-comment">   | List of profiles that are active for all builds.</span><br><span class="hljs-comment">   |</span><br><span class="hljs-comment">  &lt;activeProfiles&gt;</span><br><span class="hljs-comment">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span><br><span class="hljs-comment">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span><br><span class="hljs-comment">  &lt;/activeProfiles&gt;</span><br><span class="hljs-comment">  --&gt;</span><br></code></pre></td></tr></table></figure><p>以上是settings.xml文件的全部内容，直接全部复制即可用。</p><ul><li><p>备注：settings.xml文件从maven的安装目录下的conf下的settings.xml文件改造而来，只做了两个地方的修改，一个是<localRepository>D:\devEnviroment\maven\repo</localRepository>，这里需要改成自己的仓库地址(自己定，随意都行)，第二个修改是镜像的配置，加入的代码是下面的代码块</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows安装cygwin</title>
    <link href="/2020/12/09/tool/windows%E5%AE%89%E8%A3%85cygwin/"/>
    <url>/2020/12/09/tool/windows%E5%AE%89%E8%A3%85cygwin/</url>
    
    <content type="html"><![CDATA[<h2 id="安装地址-http-www-cygwin-com"><a href="#安装地址-http-www-cygwin-com" class="headerlink" title="安装地址:  http://www.cygwin.com/"></a>安装地址:  <a href="http://www.cygwin.com/">http://www.cygwin.com/</a></h2><h2 id="添加到鼠标右键在当前位置打开"><a href="#添加到鼠标右键在当前位置打开" class="headerlink" title="添加到鼠标右键在当前位置打开"></a>添加到鼠标右键在当前位置打开</h2><ul><li><p>在cygwin中安装chere</p><ul><li><img src="https://bbsmax.ikafan.com/static/L3Byb3h5L2h0dHBzL2ltZzIwMTguY25ibG9ncy5jb20vYmxvZy8xMjgxNTIzLzIwMTkwNC8xMjgxNTIzLTIwMTkwNDIxMDAyMzAzODg2LTczNTMyMzEwNC5wbmc=.jpg" alt="img"></li></ul></li><li><p>管理员权限执行mintty,输入下列命令</p><ul><li><pre><code class="shell">chere -i -t mintty -s bash</code></pre></li></ul></li><li><p>之后,鼠标右键将会显示一个Bash Prompt Here.</p></li><li><p>如果想要修改请到HKEY_CLASSES_ROOT\Directory\background\shell\cygwin64_bash修改,也可以添加Ext <img src="https://bbsmax.ikafan.com/static/L3Byb3h5L2h0dHBzL2ltYWdlczAuY25ibG9ncy5jb20vYmxvZy81NTM5NDIvMjAxNDA5LzE2MTgyMzExNjU5NTc3My5wbmc=.jpg" alt="img"> ended键,按下shift才出现.</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>家里树莓派配置</title>
    <link href="/2020/12/07/tool/%E5%AE%B6%E9%87%8C%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/12/07/tool/%E5%AE%B6%E9%87%8C%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<ul><li>代理工具</li><li>frp地址 <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></li><li>其他代理 ngrok</li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>挂载了一块硬盘到/home/pi/hardDisk/RaspberryPi 下面</li><li>防火墙使用 ufw</li><li>开机启动服务 <a href="https://www.jianshu.com/p/f5527d73bca3">https://www.jianshu.com/p/f5527d73bca3</a></li><li>frp文件位置 <ul><li>/home/pi/Desktop/frp/frp</li><li>启动 systemctl start frp</li></ul></li><li>开机自启动frp服务 启动遇到的问题（重启  因为是请求网络，网络没有连接就直接启动了）<ul><li>解决方案:  /usr/lib/systemd/system/frp.service<ul><li>文件中添加 RestartSec 表示 Systemd 重启服务之前，需要等待的秒数。上面的例子设为等待42秒。</li><li>参考地址 <a href="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html</a></li></ul></li></ul></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><p>codeServe网盘搭建 <a href="https://github.com/cloudreve/Cloudreve">https://github.com/cloudreve/Cloudreve</a></p><ul><li>监听5212端口</li></ul></li><li><p>配置node</p><ul><li><pre><code class="shell">linux，软链接配置node,npm全局命令sudo ln -s /usr/local/bin/node   /bin/nodesudo ln -s /usr/local/bin/npm    /bin/npm这样配置后，在root下和别的用户下都能使用node命令</code></pre></li></ul></li><li><p>安装软件包</p></li><li><p>sudo apt update 、 sudo apt upgrade</p><ul><li>安装mongodb<ul><li>sudo apt-get install mongodb</li><li>sudo systemctl enable mongodb</li><li>sudo systemctl start mongodb</li><li>mongo</li></ul></li><li>安装redis<ul><li>sudo apt-get install redis-server</li><li>不能访问redis 在/etc/redis/redis.conf 里面的bind 127.0.0.1前面加上一个#,注释就可以访问了，端口是6379</li><li>linux dash 监控面板  <a href="https://github.com/NoBey/linux-dash-zh">https://github.com/NoBey/linux-dash-zh</a></li></ul></li></ul></li></ul><h2 id="☺"><a href="#☺" class="headerlink" title="☺"></a>☺</h2><ul><li>目前启动服务： <ul><li> <a href="http://mock.start6.cn:7002/">mock</a></li><li><a href="http://wp.start6.cn:7002/">网盘</a></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>vscode node.js应用代码调试</title>
    <link href="/2020/04/12/javascript/vscode-node-js%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95/"/>
    <url>/2020/04/12/javascript/vscode-node-js%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<ul><li><p>vscode代码配置:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-comment">// 使用 IntelliSense 了解相关属性。 </span><br>    <span class="hljs-comment">// 悬停以查看现有属性的描述。</span><br>    <span class="hljs-comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br>    <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.2.0&quot;</span>,<br>    <span class="hljs-string">&quot;configurations&quot;</span>: [&#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>        <span class="hljs-string">&quot;request&quot;</span>: <span class="hljs-string">&quot;launch&quot;</span>,<br>        <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;启动程序&quot;</span>,<br>        <span class="hljs-comment">// &quot;program&quot;: &quot;$&#123;workspaceRoot&#125;/node/index.js&quot;</span><br>        <span class="hljs-string">&quot;runtimeExecutable&quot;</span>: <span class="hljs-string">&quot;nodemon&quot;</span>,<br>        <span class="hljs-string">&quot;args&quot;</span>: [<span class="hljs-string">&quot;$&#123;workspaceRoot&#125;/node/index.js&quot;</span>],<br>        <span class="hljs-string">&quot;restart&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;protocol&quot;</span>: <span class="hljs-string">&quot;inspector&quot;</span>,<br>        <span class="hljs-string">&quot;sourceMaps&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;console&quot;</span>: <span class="hljs-string">&quot;integratedTerminal&quot;</span>,<br>        <span class="hljs-string">&quot;internalConsoleOptions&quot;</span>: <span class="hljs-string">&quot;neverOpen&quot;</span>,<br>        <span class="hljs-comment">// 其他附加配置</span><br>        <span class="hljs-string">&quot;runtimeArgs&quot;</span>: []<br>    &#125;]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>参考: <a href="https://juejin.im/post/5b270887e51d45589175afc3">地址</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>javascript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你所不知道的模块调试技巧 - npm link</title>
    <link href="/2020/03/23/front/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E6%A8%A1%E5%9D%97%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7-npm-link/"/>
    <url>/2020/03/23/front/%E4%BD%A0%E6%89%80%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E6%A8%A1%E5%9D%97%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7-npm-link/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><h3 id="1-0-node-应用开发中，我们不可避免的需要使用或拆分为-npm-模块，经常遇到的一个问题是："><a href="#1-0-node-应用开发中，我们不可避免的需要使用或拆分为-npm-模块，经常遇到的一个问题是：" class="headerlink" title="1.0 node 应用开发中，我们不可避免的需要使用或拆分为 npm 模块，经常遇到的一个问题是："></a>1.0 node 应用开发中，我们不可避免的需要使用或拆分为 npm 模块，经常遇到的一个问题是：</h3><blockquote><p>新开发或修改的 npm 模块，如何在项目中试验？</p></blockquote><p>为了方便示范，我们假设项目是 <code>my-project</code>, 需要用到一个独立的 <code>my-utils</code> 模块</p><h3 id="1-1-发布一个-beta-版本"><a href="#1-1-发布一个-beta-版本" class="headerlink" title="1.1 发布一个 beta 版本"></a>1.1 发布一个 beta 版本</h3><ul><li>优点：你高兴就好。</li><li><strong>缺点：</strong> 无趣+无趣+无趣，麻烦+麻烦+麻烦。</li></ul><h3 id="1-2-直接用相对路径安装"><a href="#1-2-直接用相对路径安装" class="headerlink" title="1.2 直接用相对路径安装"></a>1.2 直接用相对路径安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/my-project</span><br><span class="hljs-meta">$</span><span class="bash"> npm install path/to/my-utils</span><br></code></pre></td></tr></table></figure><ul><li>优点：简单明了</li><li><strong>缺点：</strong> 调试过程中往往需要微调，此时需要切换到 my-utils 目录修改，然后反复重新 install，很麻烦</li></ul><h3 id="1-3-使用软链"><a href="#1-3-使用软链" class="headerlink" title="1.3 使用软链"></a>1.3 使用软链</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/my-project/node_modules</span><br><span class="hljs-meta">$</span><span class="bash"> ln -s path/to/my-utils my-utils</span><br></code></pre></td></tr></table></figure><ul><li>优点：软链后，两边修改直接同步</li><li><strong>缺点：</strong> 指令操作麻烦，不同操作系统语法不一样</li></ul><h2 id="2-正解-npm-link"><a href="#2-正解-npm-link" class="headerlink" title="2. 正解 - npm link"></a>2. 正解 - npm link</h2><p>但其实 npm 本身已经对此类情况提供了专门的 <code>npm link</code> 指令。</p><p>相关文档： <a href="https://docs.npmjs.com/cli/link">https://docs.npmjs.com/cli/link</a></p><p>下面我们简单介绍下用法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/my-project</span><br><span class="hljs-meta">$</span><span class="bash"> npm link path/to/my-utils</span><br></code></pre></td></tr></table></figure><p>简单的替换一个单词，就搞定了，cool~</p><p>如果这两种的目录不在一起，那还有一种方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-comment"># 先去到模块目录，把它 link 到全局</span></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/my-utils</span><br><span class="hljs-meta">$</span><span class="bash"> npm link</span><br><span class="hljs-meta">$</span><br><span class="bash">$ <span class="hljs-comment"># 再去项目目录通过包名来 link</span></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/my-project</span><br><span class="hljs-meta">$</span><span class="bash"> npm link my-utils</span><br></code></pre></td></tr></table></figure><p>该指令还可以用来调试 node cli 模块，譬如需要本地调试我们的 <a href="https://github.com/eggjs/egg-init">egg-init</a>，可以这样：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> path/to/egg-init</span><br><span class="hljs-meta">$</span><span class="bash"> npm link</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-comment"># 此时全局的 egg-init 指令就已经指向你的本地开发目录了</span></span><br><span class="hljs-meta">$</span><span class="bash"> egg-init <span class="hljs-comment"># 即可</span></span><br></code></pre></td></tr></table></figure><p>想去掉 link 也很简单：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> npm unlink my-utils</span><br></code></pre></td></tr></table></figure><h2 id="3-写在最后"><a href="#3-写在最后" class="headerlink" title="3. 写在最后"></a>3. 写在最后</h2><ul><li>该方法只是为了最后一步调试，模块本身的正确性，应该更多的通过单元测试来保证。</li><li>单元测试相关内容，可以参见：<a href="https://eggjs.org/zh-cn/core/unittest.html">单元测试</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RabbitMQ报错(406, &quot;PRECONDITION_FAILED - parameters for queue &#39;test_queue&#39; in vhost &#39;/test&#39; not equivalent&quot;)</title>
    <link href="/2020/03/18/front/equivalent/"/>
    <url>/2020/03/18/front/equivalent/</url>
    
    <content type="html"><![CDATA[<ul><li><p>报错如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">File <span class="hljs-string">&quot;C:\projects\project_name\mq\rabbitclient.py&quot;</span>, line <span class="hljs-number">26</span>, <span class="hljs-keyword">in</span> __init__<br>self.channel.queue_declare(queue=conf.queue_name)<br>File <span class="hljs-string">&quot;C:\env\project_name\lib\site-packages\pika\adapters\blocking_connection.py&quot;</span>, line <span class="hljs-number">2507</span>, <span class="hljs-keyword">in</span> queue_declare<br>self._flush_output(declare_ok_result.is_ready)<br>File <span class="hljs-string">&quot;C:\env\project_name\lib\site-packages\pika\adapters\blocking_connection.py&quot;</span>, line <span class="hljs-number">1340</span>, <span class="hljs-keyword">in</span> _flush_output<br><span class="hljs-keyword">raise</span> self._closing_reason <span class="hljs-comment"># pylint: disable=E0702</span><br><br>pika.exceptions.ChannelClosedByBroker: (<span class="hljs-number">406</span>, <span class="hljs-string">&quot;PRECONDITION_FAILED - parameters for queue &#x27;test_queue&#x27; in vhost &#x27;/test&#x27; not equivalent&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br> <br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> pika<br><span class="hljs-keyword">import</span> Config<br> <br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RabbitMQClient</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    RabbitMQ Client</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        conf = Config()<br>        credentials = pika.PlainCredentials(conf.rabbit_user, conf.rabbit_password)<br>        self.conn = pika.BlockingConnection(pika.ConnectionParameters(<br>            host=conf.rabbit_ip,<br>            port=conf.rabbit_port,<br>            virtual_host=conf.vhost,<br>            credentials=credentials<br>        ))<br> <br>        self.channel = self.conn.channel()<br>        self.exchange = conf.exchange<br>        self.routing_key = conf.routing_key<br>        self.channel.exchange_declare(exchange=self.exchange, exchange_type=<span class="hljs-string">&#x27;direct&#x27;</span>, durable=<span class="hljs-literal">True</span>)<br>        self.channel.queue_declare(queue=conf.queue_name)<br>        self.channel.queue_bind(<br>            queue=conf.queue_name,<br>            exchange=self.exchange,<br>            routing_key=self.routing_key<br>        )<br> <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send</span>(<span class="hljs-params">self, msg</span>):</span><br>        <span class="hljs-keyword">try</span>:<br>            self.channel.basic_publish(<br>                exchange=self.exchange,<br>                routing_key=self.routing_key,<br>                body=json.dumps(msg),<br>                properties=pika.BasicProperties(<br>                    delivery_mode=<span class="hljs-number">2</span><br>                )<br>            )<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">raise</span> e<br> <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">close</span>(<span class="hljs-params">self</span>):</span><br>        self.conn.close()<br> <br> <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>        client = RabbitMQClient()<br>        client.send(exec_info)<br>        client.close()<br></code></pre></td></tr></table></figure></li><li><p>定位问题</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">我们在声明exchange的时候加了如下参数：<span class="hljs-attribute">durable</span>=<span class="hljs-literal">True</span>，代表持久化；<br>发布信息的时候加了如下参数：<span class="hljs-attribute">delivery_mode</span>=2，代表持久化消息；<br>我们再看声明queue的时候如何？<br>在rabbitmq中，想要重启后不丢失消息，要为信息加<span class="hljs-attribute">delivery_mode</span>=2参数，只为消息加持久化限制，MQ重启之后，exchange和queue全部丢失，也是不行的，所以也要为exchange和queue做持久化，都是由durable=True控制。<br><br>所以，修改上述代码第26行如下：<br>self.channel.queue_declare(<span class="hljs-attribute">queue</span>=conf.queue_name, <span class="hljs-attribute">durable</span>=<span class="hljs-literal">True</span>)<br>再次测试便不报错了。<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koa-router异步问题</title>
    <link href="/2020/03/12/front/Koa-router%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/"/>
    <url>/2020/03/12/front/Koa-router%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Koa-router-请求异步问题"><a href="#Koa-router-请求异步问题" class="headerlink" title="Koa-router 请求异步问题"></a>Koa-router 请求异步问题</h1><ul><li><p>参考: <a href="https://blog.csdn.net/strangedbly/article/details/61925167">地址</a></p></li><li><p>koa-router源码: <a href="https://github.com/alexmingoia/koa-router/blob/master/test/lib/router.js">地址</a></p></li><li><p>通过promise实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">router.get(<span class="hljs-string">&#x27;/double&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ctx, next</span>) </span>&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>&#123;<span class="hljs-comment">//关键啊，文档中居然没有</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>          ctx.body = &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;Hello&#x27;</span>&#125;;         <span class="hljs-comment">//这就是我遇到的问题啊。异步中的ctx.body赋值。</span><br>          resolve(next());<br>        &#125;, <span class="hljs-number">1</span>);<br>      &#125;);<br>    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ctx, next</span>) </span>&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>          ctx.body.message += <span class="hljs-string">&#x27; World&#x27;</span>;<br>          resolve(next());<br>        &#125;, <span class="hljs-number">1</span>);<br>      &#125;);<br>    &#125;, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ctx, next</span>) </span>&#123;<br>      ctx.body.message += <span class="hljs-string">&#x27;!&#x27;</span>;<br>    &#125;);<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>koa</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>.prettierrc文件常见配置</title>
    <link href="/2020/02/26/front/prettierrc%E6%96%87%E4%BB%B6%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/02/26/front/prettierrc%E6%96%87%E4%BB%B6%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-comment">// tab缩进大小,默认为2</span><br>    <span class="hljs-string">&quot;tabWidth&quot;</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-comment">// 使用tab缩进，默认false</span><br>    <span class="hljs-string">&quot;useTabs&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 使用分号, 默认true</span><br>    <span class="hljs-string">&quot;semi&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 使用单引号, 默认false(在jsx中配置无效, 默认都是双引号)</span><br>    <span class="hljs-string">&quot;singleQuote&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 行尾逗号,默认none,可选 none|es5|all</span><br>    <span class="hljs-comment">// es5 包括es5中的数组、对象</span><br>    <span class="hljs-comment">// all 包括函数对象等所有可选</span><br>    <span class="hljs-string">&quot;TrailingCooma&quot;</span>: <span class="hljs-string">&quot;all&quot;</span>,<br>    <span class="hljs-comment">// 对象中的空格 默认true</span><br>    <span class="hljs-comment">// true: &#123; foo: bar &#125;</span><br>    <span class="hljs-comment">// false: &#123;foo: bar&#125;</span><br>    <span class="hljs-string">&quot;bracketSpacing&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">// JSX标签闭合位置 默认false</span><br>    <span class="hljs-comment">// false: &lt;div</span><br>    <span class="hljs-comment">//          className=&quot;&quot;</span><br>    <span class="hljs-comment">//          style=&#123;&#123;&#125;&#125;</span><br>    <span class="hljs-comment">//       &gt;</span><br>    <span class="hljs-comment">// true: &lt;div</span><br>    <span class="hljs-comment">//          className=&quot;&quot;</span><br>    <span class="hljs-comment">//          style=&#123;&#123;&#125;&#125; &gt;</span><br>    <span class="hljs-string">&quot;jsxBracketSameLine&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-comment">// 箭头函数参数括号 默认avoid 可选 avoid| always</span><br>    <span class="hljs-comment">// avoid 能省略括号的时候就省略 例如x =&gt; x</span><br>    <span class="hljs-comment">// always 总是有括号</span><br>    <span class="hljs-string">&quot;arrowParens&quot;</span>: <span class="hljs-string">&quot;avoid&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>下载electron失败</title>
    <link href="/2020/02/22/front/%E4%B8%8B%E8%BD%BDelectron%E5%A4%B1%E8%B4%A5/"/>
    <url>/2020/02/22/front/%E4%B8%8B%E8%BD%BDelectron%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<ul><li><p>使用<code>npm install electron --verbose</code>查看具体报错原因</p></li><li><p>mac解决方案:</p><ul><li><p>进入~/.npmrc</p></li><li><p>解决方案一:  taobao镜像下载增加如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">registry=https://registry.npm.taobao.org<br>sass_binary_site=https://npm.taobao.org/mirrors/node-sass/<br>phantomjs_cdnurl=http://npm.taobao.org/mirrors/phantomjs<br>electron_mirror=http://npm.taobao.org/mirrors/electron/<br></code></pre></td></tr></table></figure></li><li><p>方案二:</p><ul><li><p>进到项目目录 node_modules\electron\install.js 找到如下代码并且修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// downloads if not cached</span><br>downloadArtifact(&#123;<br>  version,<br>  artifactName: <span class="hljs-string">&#x27;electron&#x27;</span>,<br>  force: process.env.force_no_cache === <span class="hljs-string">&#x27;true&#x27;</span>,<br>  cacheRoot: process.env.electron_config_cache,<br>  platform: process.env.npm_config_platform || process.platform,<br>  arch: process.env.npm_config_arch || process.arch,<br>  <span class="hljs-comment">//添加如下代码，</span><br>  mirrorOptions:&#123;<br>    mirror: <span class="hljs-string">&#x27;https://npm.taobao.org/mirrors/electron/&#x27;</span>,<br>    customDir: version<br>  &#125;<br>&#125;).then(<span class="hljs-function">(<span class="hljs-params">zipPath</span>) =&gt;</span> extractFile(zipPath)).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> onerror(err))<br></code></pre></td></tr></table></figure></li><li><p>再次用终端打开 项目目录下的 <code>node_modules\electron</code> 运行 <code>node install.js</code></p></li><li><p>完美解决</p></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>electron</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>angular打包错误ERROR in Illegal State issue when giving angular build</title>
    <link href="/2020/02/19/angular/angular%E6%89%93%E5%8C%85%E9%94%99%E8%AF%AFERROR-in-Illegal-State-issue-when-giving-angular-build/"/>
    <url>/2020/02/19/angular/angular%E6%89%93%E5%8C%85%E9%94%99%E8%AF%AFERROR-in-Illegal-State-issue-when-giving-angular-build/</url>
    
    <content type="html"><![CDATA[<ul><li><p>执行 ng build –prod</p><ul><li><p>错误描述:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ERROR <span class="hljs-keyword">in</span> Illegal State: referring to a <span class="hljs-built_in">type</span> without a variable &#123;<span class="hljs-string">&quot;filePath&quot;</span>:<span class="hljs-string">&quot;/home/jenkins/agent/workspace/smartcampus/frontend/smartcampus-school-pc-cn-develop/node_modules/ng-zorro-antd/table/ng-zorro-antd-table.d.ts&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;NzTrDirective&quot;</span>,<span class="hljs-string">&quot;members&quot;</span>:[]&#125;<br></code></pre></td></tr></table></figure></li><li><p>解决方案: 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">tsconfig.json -&gt; fullTemplateTypeCheck-&gt;<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></li><li><p>继续执行 ng build –prod 根据提示修改对应错误</p></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>打包</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac系统上安装FFmpeg</title>
    <link href="/2020/02/18/tool/Mac%E7%B3%BB%E7%BB%9F%E4%B8%8A%E5%AE%89%E8%A3%85FFmpeg/"/>
    <url>/2020/02/18/tool/Mac%E7%B3%BB%E7%BB%9F%E4%B8%8A%E5%AE%89%E8%A3%85FFmpeg/</url>
    
    <content type="html"><![CDATA[<h2 id="1-下载FFmpeg"><a href="#1-下载FFmpeg" class="headerlink" title="1.下载FFmpeg"></a>1.下载FFmpeg</h2><p>先进入要存放下载文件的目录，比如要放在/Users/qinjian/Downloads/ffm目录，先执行命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /Users/qinjian/Downloads/ffm<br></code></pre></td></tr></table></figure><p>再执行下载的命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://git.ffmpeg.org/ffmpeg.git<br></code></pre></td></tr></table></figure><h2 id="2-编译FFmpeg"><a href="#2-编译FFmpeg" class="headerlink" title="2.编译FFmpeg"></a>2.编译FFmpeg</h2><p>先执行下面命令进入ffmpeg目录：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /Users/qinjian/Downloads/ffm/ffmpeg<br></code></pre></td></tr></table></figure><p>再执行下面命令配置configure：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./configure --prefix=/usr/local/ffmpeg  --enable-gpl  --enable-nonfree  --enable-libfdk-aac  --enable-libx264  --enable-libx265 --enable-filter=delogo --enable-debug --disable-optimizations --enable-libspeex --enable-videotoolbox --enable-shared --enable-pthreads --enable-version3 --enable-hardcoded-tables --cc=clang --host-cflags= --host-ldflags=<br></code></pre></td></tr></table></figure><p>如果报错<code>nasm/yasm not found or too old. Use --disable-x86asm for a crippled build</code>的话，先执行下面命令安装yasm然后再执行配置configure的命令。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install yasm<br></code></pre></td></tr></table></figure><p>如果报错<code>ERROR: libfdk_aac not found</code>的话，先执行下面命令安装fdk-aac然后再执行配置configure的命令。</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install fdk-aac<br></code></pre></td></tr></table></figure><h2 id="3-安装FFmpeg"><a href="#3-安装FFmpeg" class="headerlink" title="3.安装FFmpeg"></a>3.安装FFmpeg</h2><p>执行下面命令来安装：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">make &amp;&amp; make install<br><br>// 如果安装出现下图的错误的话就用这条命令来安装<br>sudo make &amp;&amp; sudo make install<br></code></pre></td></tr></table></figure><p>安装成功后ffmpeg所在的目录是/usr/local/ffmpeg。</p><h2 id="4-配置环境变量"><a href="#4-配置环境变量" class="headerlink" title="4.配置环境变量"></a>4.配置环境变量</h2><p>安装成功后要输入ffmpeg的全路径才能调用ffmpeg命令：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/ffmpeg/bin/ffmpeg -version<br></code></pre></td></tr></table></figure><p>我们可以配置环境变量，配置环境变量后可以直接通过ffmpeg -version来调用命令。<br>先执行下面命令打开环境变量配置文件</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi ~/.bash_profile<br></code></pre></td></tr></table></figure><p>在配置文件加入ffmpeg的bin文件夹路径：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">export PATH=$PATH:/usr/local/ffmpeg/bin<br></code></pre></td></tr></table></figure><p>然后输入:wq保存退出，再执行下面命令让刚配置的环境变量生效：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bash_profile<br></code></pre></td></tr></table></figure><p>其他参考: <a href="https://www.jianshu.com/p/85f905ddb36f">地址</a></p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebStorm2019 Mac版破解</title>
    <link href="/2020/02/17/front/WebStorm2019-Mac%E7%89%88%E7%A0%B4%E8%A7%A3/"/>
    <url>/2020/02/17/front/WebStorm2019-Mac%E7%89%88%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<ul><li>参考: <a href="https://www.jianshu.com/p/2c47596ae817">地址</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac 下chromium缺少Google API 密钥，因此 chromium的部分功能将无法使用</title>
    <link href="/2020/02/09/tool/Mac-%E4%B8%8Bchromium%E7%BC%BA%E5%B0%91Google-API-%E5%AF%86%E9%92%A5%EF%BC%8C%E5%9B%A0%E6%AD%A4-chromium%E7%9A%84%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E5%B0%86%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/02/09/tool/Mac-%E4%B8%8Bchromium%E7%BC%BA%E5%B0%91Google-API-%E5%AF%86%E9%92%A5%EF%BC%8C%E5%9B%A0%E6%AD%A4-chromium%E7%9A%84%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E5%B0%86%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>chromium 使用登录功能需要配置 GoogleAPI 密钥，相关获取方式可以自动搜索</p><p>本文主要讲述 Mac 下配置</p><p>如果缺失无法登陆谷歌账号，Chrome 的书签同步功能无法使用；</p><p>解决方案：</p><p>第一步</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv /Applications/Chromium.app/Contents/MacOS/Chromium /Applications/Chromium.app/Contents/MacOS/Chromium_bin<br></code></pre></td></tr></table></figure><p>第二步<br>vi /Applications/Chromium.app/Contents/MacOS/Chromium</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br><br><span class="hljs-meta">#</span><span class="bash"> Set up environment variables</span><br>export GOOGLE_API_KEY=&quot;xxxxxxx&quot;<br>export GOOGLE_DEFAULT_CLIENT_ID=&quot;xxxxxxx&quot;<br>export GOOGLE_DEFAULT_CLIENT_SECRET=&quot;xxxxxx&quot;<br><br><span class="hljs-meta">#</span><span class="bash"> Launch Chromium</span><br>/Applications/Chromium.app/Contents/MacOS/Chromium_bin<br></code></pre></td></tr></table></figure><p>第三步<br>chmod +x /Applications/Chromium.app/Contents/MacOS/Chromium</p><p>完成</p><p>参考文档：<a href="https://gist.github.com/cvan/44a6d60457b20133191bd7b104f9dcc4">https://gist.github.com/cvan/44a6d60457b20133191bd7b104f9dcc4</a></p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>taro多端开发</title>
    <link href="/2020/01/29/front/taro%E5%A4%9A%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    <url>/2020/01/29/front/taro%E5%A4%9A%E7%AB%AF%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="taro-多端开发应用"><a href="#taro-多端开发应用" class="headerlink" title="taro 多端开发应用"></a>taro 多端开发应用</h1><h2 id="在线预览地址"><a href="#在线预览地址" class="headerlink" title="在线预览地址"></a>在线预览地址</h2><ul><li>H5 <a href="https://taro.start6.cn">地址</a></li></ul><h2 id="egg-后台"><a href="#egg-后台" class="headerlink" title="egg 后台"></a>egg 后台</h2><ul><li><p>问题总结:</p><ul><li><p>egg 跨域:</p><ul><li><pre><code class="javascript">步骤一：# 下载 egg-cors 包npm i egg-cors --save步骤二：# 在plugin.js中设置开启corsexports.cors = &#123;  enable: true,  package: &#39;egg-cors&#39;,&#125;;步骤三：# 在config.&#123;env&#125;.js中配置，注意配置覆盖的问题config.security = &#123;  csrf: &#123;    enable: false,    ignoreJSON: true  &#125;,  domainWhiteList: &#39;*&#39;&#125;;config.cors = &#123;  origin:&#39;*&#39;,  allowMethods: &#39;GET,HEAD,PUT,POST,DELETE,PATCH&#39;&#125;;</code></pre></li></ul></li></ul></li></ul><h2 id="今日头条接口"><a href="#今日头条接口" class="headerlink" title="今日头条接口"></a>今日头条接口</h2><ol><li>首页顶部 tabs 接口: <code>https://api3-normal-c-lf.snssdk.com/article/category/get_subscribed/v4/?iid=101398257036&amp;device_id=66877782274&amp;ac=wifi&amp;mac_address=A4%3A50%3A46%3ACD%3A3D%3AAB&amp;channel=xiaomi&amp;aid=13&amp;app_name=news_article&amp;version_code=757&amp;version_name=7.5.7&amp;device_platform=android&amp;ab_version=1251921%2C662099%2C1407070%2C668774%2C1396152%2C1445075%2C765196%2C821967%2C857803%2C660830%2C1439346%2C1397711%2C1243993%2C1434500%2C1379677%2C662176%2C1378615%2C801968%2C1419048%2C668775%2C1190524%2C1157750%2C1419597%2C1439625%2C1422304%2C1428576%2C668779%2C759656%2C1388002&amp;ab_feature=94563%2C102749&amp;ssmix=a&amp;device_type=MI+8&amp;device_brand=Xiaomi&amp;language=zh&amp;os_api=28&amp;os_version=9&amp;uuid=869832047288317&amp;openudid=c836b6236d8fcd86&amp;manifest_version_code=7571&amp;resolution=1080*2029&amp;dpi=440&amp;update_version_code=75717&amp;_rticket=1580206995760&amp;plugin=18762&amp;pos=5r_-9Onkv6e_eCopeCA7eyoLeC0JeCUfv7G_8fLz-vTp6Pn4v6esraSzrKuvrq6tqaWtr66uqqWxv_H86fTp6Pn4v6eprLOpqqqrrqWrq6uprKqlpbG__PD87d706eS_p794Kil4IDt7Kgt4LQl4JR-_sb_88Pzt0fLz-vTp6Pn4v6esraSzrKuvrq6tqaWtr66uqqWxv_zw_O3R_On06ej5-L-nqayzqaqqq66lq6urqayqpaXg&amp;rom_version=miui_v11_v11.0.4.0.peacnxm&amp;cdid=ee711002-293a-4f81-8060-8ffa05e9a76f&amp;oaid=4aea438a0899600d</code></li><li>首页顶部-&gt;推荐接口: <code>https://api3-normal-c-lf.snssdk.com/api/news/feed/v88/</code></li></ol><h2 id="开源中国接口"><a href="#开源中国接口" class="headerlink" title="开源中国接口"></a>开源中国接口</h2><ol><li><p>综合-&gt;顶部-&gt;软件:</p><ul><li><p>列表: <code>https://h5.oschina.net/apiv3/projectRecommend?size=20&amp;page=1</code></p></li><li><p>详情: <code>https://h5.oschina.net/project/detail/50356</code></p></li></ul></li></ol><h2 id="京东万象-api-接口"><a href="#京东万象-api-接口" class="headerlink" title="京东万象 api 接口"></a>京东万象 api 接口</h2><ul><li>api 地址: <a href="https://wx.jdcloud.com/market/api/11073">新闻</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>taro</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从0实现react</title>
    <link href="/2020/01/23/react/%E4%BB%8E0%E5%AE%9E%E7%8E%B0react/"/>
    <url>/2020/01/23/react/%E4%BB%8E0%E5%AE%9E%E7%8E%B0react/</url>
    
    <content type="html"><![CDATA[<p>项目地址: <a href="https://gitee.com/EightDoor/react-simple" target="_blank">项目地地址</a><br>参考地址: <a href="https://www.bilibili.com/video/av74527572?from=search&seid=16681124829616503908">bilibili</a></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">1</span>.下载<span class="hljs-string">nodejs</span><br><span class="hljs-string">2</span>.下载脚手架: <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-built_in">create-react-app</span> -<span class="hljs-string">g</span><br><span class="hljs-string">3</span>.创建项目:<span class="hljs-built_in">create-react-app</span> <span class="hljs-string">react-test</span><br></code></pre></td></tr></table></figure><p>1.火热的0配置的打包工具parcel</p><ul><li>地址: <a href="https://parceljs.org/getting_started.html">parcel官网</a></li></ul><p>2.安装babel插件,将jsx语法转换成js对象(虚拟DOM)</p><ul><li><pre><code class="javascript">npm install babel-core babel-preset-env babel-plugin-transform-react-jsx --save-dev</code></pre></li><li><p><a href="https://www.babeljs.cn/">babel官网</a></p></li></ul><p>3.组件和生命周期</p><p>4.diff算法</p><h3 id="diff算法-待完成"><a href="#diff算法-待完成" class="headerlink" title="diff算法(待完成)"></a>diff算法(待完成)</h3><ul><li><p>如何减少DOM更新: 我们需要找出渲染前后真正变化的部分,只更新这一部分,而对比变化，找出需要更新部分的算法称之为<strong>diff算法</strong></p></li><li><p>对比策略:</p><ul><li>在前面我们实现了<code>_render</code>方法,它能够将虚拟DOM转换成真正的DOM</li></ul></li></ul><ul><li>但是我们需要改进它,不要让它傻乎乎的重新渲染整个DOM树,而是找出真正变化的部门进行替换。</li></ul><ul><li>这部门很多类似React框架实现方式都不太一样，有的框架会选择保存上次渲染的虚拟DOM，然后对比虚拟DOM前后的变化，得到一系列更新的数据，然后再将这些更新应用到真正的DOM上。</li></ul><ul><li>我们会选择直接对比虚拟DOM和真实DOM，这样就不需要额外保存上一次渲染的虚拟DOM，并且能够一边对比一边更新，这也是我们选择的方式。**</li></ul><ul><li><p>不管是DOM还是虚拟DOM，他们的结构都是一棵树，完全对比两棵树变化的算法时间复杂度是0(n^3),但是考虑到我们很少会跨层级移动DOM，所以我们只需要对比同一层级的变化。</p><p><img src="https://upload-images.jianshu.io/upload_images/5518628-d60043dbeddfce8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/504/format/webp.png" alt="avatar"></p></li></ul>  <center>只需要对比同一颜色框内的节点</center><ul><li><p>总而言之，我们的<strong>diff算法有两个原则</strong></p><ul><li>对比当前真实的DOM和虚拟DOM，再对比过程中直接更新真实DOM</li><li>只对比同一层级的变化</li></ul></li><li><p>5.异步的setState</p></li><li><p><a href="https://www.babeljs.cn/">babel 官网</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>react</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3.0响应式原理</title>
    <link href="/2020/01/22/vue3/Vue3-0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/"/>
    <url>/2020/01/22/vue3/Vue3-0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<ul><li><p>实现方法:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Vue3.0 响应式原理</span><br><span class="hljs-comment">// 1). 2.0默认会递归(数据尽量扁平化) 2). 2.0数组改变length是无效的 3). 2.0对象不存在的属性不能被拦截</span><br><br><span class="hljs-comment">// proxy 兼容性差 ie11不兼容</span><br><br><span class="hljs-keyword">let</span> toProxy = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>(); <span class="hljs-comment">// 弱引用映射表 es6 放置的是 原对象:代理过的对象</span><br><span class="hljs-keyword">let</span> toRaw = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>(); <span class="hljs-comment">// 被代理过得对象:原对象</span><br><span class="hljs-comment">// 判断是不是对象</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isObject</span>(<span class="hljs-params">val</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">&quot;object&quot;</span> &amp;&amp; val !== <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-comment">// 判断对象有没有属性</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasOwn</span>(<span class="hljs-params">target, key</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> target.hasOwnProperty(key);<br>&#125;<br><span class="hljs-comment">// 响应式的核心方法</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reactive</span>(<span class="hljs-params">target</span>) </span>&#123;<br>  <span class="hljs-comment">// 创建响应式对象</span><br>  <span class="hljs-keyword">return</span> createReactiveObject(target);<br>&#125;<br><br><span class="hljs-comment">// 创建响应式对象</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createReactiveObject</span>(<span class="hljs-params">target</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (!isObject(target)) &#123;<br>    <span class="hljs-comment">// 如果当前不是对象， 直接返回</span><br>    <span class="hljs-keyword">return</span> target;<br>  &#125;<br>  <span class="hljs-comment">// 如果已经代理过了，就将代理过得结果返回;</span><br>  <span class="hljs-keyword">let</span> proxy = toProxy.get(target);<br>  <span class="hljs-keyword">if</span> (proxy) &#123;<br>    <span class="hljs-keyword">return</span> proxy;<br>  &#125;<br>  <span class="hljs-comment">// 防止代理过得对象再次被代理</span><br>  <span class="hljs-keyword">if</span> (toRaw.has(target)) &#123;<br>    <span class="hljs-keyword">return</span> target;<br>  &#125;<br>  <span class="hljs-keyword">let</span> baseHandler = &#123;<br>    <span class="hljs-comment">// reflect 优点: 不会报错，而且会有返回值，会替代掉Object上的方法</span><br><br>    <span class="hljs-comment">// target - 源对象, key - 键值, receiver - 新的proxy代理对象</span><br>    <span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params">target, key, receiver</span>)</span> &#123;<br>      <span class="hljs-comment">// 收集依赖 订阅 把当前的key和这个effect对应起来</span><br>      track(target, key); <span class="hljs-comment">// 如果目标上的 这个key变化  从新让数组中的effect执行即可</span><br><br>      <span class="hljs-comment">// console.log(&#x27;获取&#x27;);</span><br>      <span class="hljs-comment">// proxy + reflect 反射</span><br>      <span class="hljs-keyword">let</span> result = <span class="hljs-built_in">Reflect</span>.get(target, key, receiver);<br>      <span class="hljs-comment">// result 是当前获取到的值</span><br>      <span class="hljs-keyword">return</span> isObject(result) ? reactive(result) : result; <span class="hljs-comment">// 是个递归</span><br>      <span class="hljs-comment">// return target[key];</span><br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">target, key, value, receiver</span>)</span> &#123;<br>      <span class="hljs-comment">// 怎么去 识别改属性 还是新增属性</span><br>      <span class="hljs-keyword">let</span> hasKey = hasOwn(target, key); <span class="hljs-comment">// 判断这个属性 以前有没有</span><br>      <span class="hljs-comment">// console.log(key, value);</span><br>      <span class="hljs-comment">// console.log(&#x27;设置&#x27;);</span><br>      <span class="hljs-keyword">let</span> oldValue = target[key];<br>      <span class="hljs-keyword">let</span> res = <span class="hljs-built_in">Reflect</span>.set(target, key, value, receiver); <span class="hljs-comment">// 返回boolean值</span><br>      <span class="hljs-keyword">if</span> (!hasKey) &#123;<br>        trigger(target, <span class="hljs-string">&quot;add&quot;</span>, key);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;新增属性&quot;</span>);<br>      &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (oldValue !== value) &#123;<br>        <span class="hljs-comment">// 表示属性更改了</span><br>        trigger(target, <span class="hljs-string">&quot;set&quot;</span>, key);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;修改属性&quot;</span>);<br>      &#125; <span class="hljs-comment">// 为了屏蔽无意义的修改</span><br>      <span class="hljs-keyword">return</span> res;<br>      <span class="hljs-comment">// target[key] = value; //缺点 如果设置没成功 如果这个对象不可以被更改(writable) - 没有返回值</span><br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-title">deleteProperty</span>(<span class="hljs-params">target, key</span>)</span> &#123;<br>      <span class="hljs-keyword">let</span> res = <span class="hljs-built_in">Reflect</span>.deleteProperty(target, key);<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;删除&quot;</span>);<br>      <span class="hljs-keyword">return</span> res;<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-keyword">let</span> observed = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Proxy</span>(target, baseHandler); <span class="hljs-comment">// es6</span><br>  <span class="hljs-comment">// 需要记录一下 如果这个对象代理过了 就不要再new了</span><br>  <span class="hljs-comment">// hash表 映射表 &#123;key=&gt;value&#125;</span><br>  toProxy.set(target, observed);<br>  toRaw.set(observed, target);<br>  <span class="hljs-keyword">return</span> observed;<br>&#125;<br><br><span class="hljs-comment">// let obj = &#123;</span><br><span class="hljs-comment">//   name: &#x27;zk&#x27;</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// 代理对象</span><br><span class="hljs-keyword">let</span> proxy = reactive(&#123;<br>  name: <span class="hljs-string">&quot;zk&quot;</span>,<br><br>  <span class="hljs-comment">// 多层代理 通过get方法来判断</span><br>  info: &#123;<br>    n: <span class="hljs-number">10</span><br>  &#125;<br>&#125;);<br><br><span class="hljs-comment">// reactive(proxy);</span><br><span class="hljs-comment">// reactive(obj);</span><br><br><span class="hljs-comment">// proxy.name = &#x27;改变的值zk&#x27;;</span><br><span class="hljs-comment">// proxy.info.n = 300</span><br><span class="hljs-comment">// console.log(proxy.name);</span><br><span class="hljs-comment">// console.log(proxy.info.n);</span><br><span class="hljs-comment">// delete proxy.name;</span><br><span class="hljs-comment">// console.log(proxy.name);</span><br><br><span class="hljs-comment">// proxy.a</span><br><span class="hljs-comment">// proxy.name = &#x27;改变的值&#x27;;</span><br><span class="hljs-comment">// delete proxy.name;</span><br><br><span class="hljs-comment">// let arr = [1, 2, 3]</span><br><span class="hljs-comment">// let proxyArr = reactive(arr)</span><br><span class="hljs-comment">// proxyArr.push(4)</span><br><span class="hljs-comment">// proxyArr.length = 4;</span><br><br><span class="hljs-comment">// 栈 先进后出&#123;name:[effect]&#125;</span><br><span class="hljs-keyword">let</span> activeEffectStacks = []; <span class="hljs-comment">// 栈型结果</span><br><br><span class="hljs-comment">// 数据结构</span><br><span class="hljs-comment">// &#123;</span><br><span class="hljs-comment">//   target: &#123;</span><br><span class="hljs-comment">//     key: [fn, fn]</span><br><span class="hljs-comment">//   &#125;</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-keyword">let</span> targetsMap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>(); <span class="hljs-comment">// 集合和hash表</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">track</span>(<span class="hljs-params">target, key</span>) </span>&#123;<br>  <span class="hljs-comment">// 如果这个target中的key变化了 我就执行数组里的方法</span><br>  <span class="hljs-keyword">let</span> effect = activeEffectStacks[activeEffectStacks.length - <span class="hljs-number">1</span>];<br>  <span class="hljs-keyword">if</span> (effect) &#123;<br>    <span class="hljs-comment">// 有对应关系 才创建关联</span><br>    <span class="hljs-keyword">let</span> depsMap = targetsMap.get(target);<br>    <span class="hljs-keyword">if</span> (!depsMap) &#123;<br>      targetsMap.set(target, (depsMap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>()));<br>    &#125;<br>    <span class="hljs-keyword">let</span> deps = depsMap.get(key);<br>    <span class="hljs-keyword">if</span> (!deps) &#123;<br>      depsMap.set(key, (deps = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>()));<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!deps.has(effect)) &#123;<br>      deps.add(effect);<br>    &#125;<br>    <span class="hljs-comment">// 动态创建依赖关系</span><br>  &#125;<br>  <span class="hljs-comment">// 什么都不做</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">trigger</span>(<span class="hljs-params">target, type, key</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> depsMap = targetsMap.get(target);<br>  <span class="hljs-keyword">if</span> (depsMap) &#123;<br>    <span class="hljs-keyword">let</span> deps = depsMap.get(key);<br>    <span class="hljs-keyword">if</span> (deps) &#123;<br>      <span class="hljs-comment">// 将当前key对应的effect依次执行</span><br>      deps.forEach(<span class="hljs-function"><span class="hljs-params">effect</span> =&gt;</span> &#123;<br>        effect();<br>      &#125;);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 响应式副作用</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">effect</span>(<span class="hljs-params">fn</span>) </span>&#123;<br>  <span class="hljs-comment">// 需要把fn这个函数变成响应式的函数</span><br>  <span class="hljs-keyword">let</span> effect = createReactiveEffect(fn);<br>  effect(); <span class="hljs-comment">// 默认 应该先执行一次</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createReactiveEffect</span>(<span class="hljs-params">fn</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> effect = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 这个就是创建的响应式的effect</span><br>    <span class="hljs-keyword">return</span> run(effect, fn); <span class="hljs-comment">// 1.让fn执行 2.把这个effect存到栈中</span><br>  &#125;;<br>  <span class="hljs-keyword">return</span> effect;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params">effect, fn</span>) </span>&#123;<br>  <span class="hljs-comment">// 运行fn, 并且将effect存起来</span><br>  <span class="hljs-keyword">try</span> &#123;<br>    activeEffectStacks.push(effect);<br>    fn(); <span class="hljs-comment">// vue2 利用了js是单线程的</span><br>  &#125; <span class="hljs-keyword">finally</span> &#123;<br>    activeEffectStacks.pop();<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 依赖收集 发布订阅</span><br><span class="hljs-keyword">let</span> obj = reactive(&#123;<br>  name: <span class="hljs-string">&quot;zk&quot;</span><br>&#125;);<br>effect(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">// effect 会执行两次 默认先执行一次 之后依赖的数据发生变化了 会再次执行</span><br>  <span class="hljs-built_in">console</span>.log(obj.name, <span class="hljs-string">&quot;effect&quot;</span>); <span class="hljs-comment">// 会调用get方法</span><br>&#125;);<br>obj.name = <span class="hljs-string">&quot;更改哦1&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>参考资料: <a href="https://www.bilibili.com/video/av71321311?p=2">Vue3.0 响应式原理第二节</a></p></li><li><p>参考资料: <a href="https://www.bilibili.com/video/av38284793/?spm_id_from=333.788.videocard.3">Vue 作者尤雨溪为你分享：Vue 3.0 进展@VueConf CN 2018</a></p></li><li><p>参考资料: <a href="https://www.bilibili.com/video/av51444410/?spm_id_from=333.788.videocard.6">尤雨溪教你写 vue 高级 vue 教程 源码分析</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue2.0响应式原理实现(对象,数组)</title>
    <link href="/2020/01/22/vue2/vue2-0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86%E5%AE%9E%E7%8E%B0-%E5%AF%B9%E8%B1%A1-%E6%95%B0%E7%BB%84/"/>
    <url>/2020/01/22/vue2/vue2-0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86%E5%AE%9E%E7%8E%B0-%E5%AF%B9%E8%B1%A1-%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue2-0-响应式原理实现-对象，数组"><a href="#Vue2-0-响应式原理实现-对象，数组" class="headerlink" title="Vue2.0 响应式原理实现(对象，数组)"></a>Vue2.0 响应式原理实现(对象，数组)</h1><ul><li><p>具体实现:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Vue2.0如何实现响应式原理</span><br><br><span class="hljs-comment">// 拿到原来原型上的方法</span><br><span class="hljs-keyword">let</span> oldArrayPrototype = <span class="hljs-built_in">Array</span>.prototype;<br><span class="hljs-comment">// 创建新的实例，获取原型所有方法，以免影响原型方法。</span><br><span class="hljs-keyword">let</span> propto = <span class="hljs-built_in">Object</span>.create(oldArrayPrototype); <span class="hljs-comment">// 继承</span><br>[<span class="hljs-string">&quot;push&quot;</span>, <span class="hljs-string">&quot;shift&quot;</span>, <span class="hljs-string">&quot;unshift&quot;</span>].forEach(<span class="hljs-function"><span class="hljs-params">method</span> =&gt;</span> &#123;<br>  propto[method] = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 函数劫持, 把函数进行重写 内部调用原来的方法</span><br>    <span class="hljs-comment">// call参考地址: https://blog.csdn.net/mandyucan/article/details/80820139</span><br>    updateView(); <span class="hljs-comment">// 切片编程</span><br>    oldArrayPrototype[method].call(<span class="hljs-built_in">this</span>, ...arguments);<br>  &#125;;<br>&#125;);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">observer</span>(<span class="hljs-params">target</span>) </span>&#123;<br>  <span class="hljs-comment">// 判断是否是对象</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> target !== <span class="hljs-string">&quot;object&quot;</span> || target === <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">return</span> target;<br>  &#125;<br><br>  <span class="hljs-comment">// 判断是否是数组</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Array</span>.isArray(target)) &#123;<br>    <span class="hljs-comment">// 拦截数组 给数组的方法进行重写</span><br>    <span class="hljs-comment">// 兼容写法 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf</span><br>    <span class="hljs-built_in">Object</span>.setPrototypeOf(target, propto);<br>    <span class="hljs-comment">// target.__proto__ = propto</span><br>  &#125;<br><br>  <span class="hljs-comment">// 重新定义属性，方法</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> target) &#123;<br>    defineReactive(target, key, target[key]);<br>  &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">defineReactive</span>(<span class="hljs-params">target, key, value</span>) </span>&#123;<br>  <span class="hljs-comment">// 值的类型可能为对象属性，继续拦截,处理</span><br>  observer(value);<br>  <span class="hljs-built_in">Object</span>.defineProperty(target, key, &#123;<br>    <span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-comment">// get进行依赖收集</span><br>      <span class="hljs-keyword">return</span> value;<br>    &#125;,<br>    <span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">newValue</span>)</span> &#123;<br>      <span class="hljs-keyword">if</span> (newValue !== value) &#123;<br>        <span class="hljs-comment">// 从新定义值可能为对象属性，处理</span><br>        observer(value);<br><br>        updateView();<br>        value = newValue;<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;<br><br><span class="hljs-comment">// 数据变化可以更新视图</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">updateView</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;更新视图&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 使用Object.defineProperty 就是可以重新定义属性,给属性增加getter和setter</span><br><span class="hljs-comment">// 问题1: 对象层级嵌套太深 递归影响性能</span><br><span class="hljs-comment">// 问题2: 如果属性不存在，新增的属性不会是响应式的</span><br><br><span class="hljs-comment">// 对象</span><br><span class="hljs-keyword">let</span> data = &#123;<br>  name: <span class="hljs-string">&quot;zf&quot;</span>,<br>  age: &#123;<br>    n: <span class="hljs-number">200</span><br>  &#125;<br>&#125;;<br><br><span class="hljs-comment">// 观察数据</span><br>observer(data);<br><br>data.name = <span class="hljs-string">&quot;jw&quot;</span>;<br>data.age.n = <span class="hljs-number">300</span>;<br><br><span class="hljs-comment">// data.age = &#123;</span><br><span class="hljs-comment">//   n: 100</span><br><span class="hljs-comment">// &#125;;</span><br><span class="hljs-comment">// data.age.n = 400;</span><br><span class="hljs-built_in">console</span>.log(data.name);<br><span class="hljs-built_in">console</span>.log(data.age.n);<br><br><span class="hljs-comment">// 数组</span><br><span class="hljs-keyword">let</span> array = &#123;<br>  name: <span class="hljs-string">&quot;zk&quot;</span>,<br>  age: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>&#125;;<br><br>observer(array);<br>array.age.push(<span class="hljs-number">4</span>); <span class="hljs-comment">// 需要对数组上的方法进行重写 push、shift、unshift、pop、reverse</span><br><span class="hljs-built_in">console</span>.log(array.age);<br></code></pre></td></tr></table></figure></li><li><p>参考地址: <a href="https://www.bilibili.com/video/av71321311/">vue3.0 源码实现原理第一节</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【ES6基础】Map与WeakMap</title>
    <link href="/2020/01/22/javascript/%E3%80%90ES6%E5%9F%BA%E7%A1%80%E3%80%91Map%E4%B8%8EWeakMap/"/>
    <url>/2020/01/22/javascript/%E3%80%90ES6%E5%9F%BA%E7%A1%80%E3%80%91Map%E4%B8%8EWeakMap/</url>
    
    <content type="html"><![CDATA[<h2 id="Map-常用方法示例"><a href="#Map-常用方法示例" class="headerlink" title="Map 常用方法示例"></a>Map 常用方法示例</h2><table><thead><tr><th align="center">操作方法</th><th align="center">内容描述</th></tr></thead><tbody><tr><td align="center">map.set(key,value)</td><td align="center">添加键值对到映射中</td></tr><tr><td align="center">map.get(key)</td><td align="center">获取映射中某一个键的对应值</td></tr><tr><td align="center">map.delete(key)</td><td align="center">将某一键值对移除映射</td></tr><tr><td align="center">Map.clear()</td><td align="center">清空映射中所有键值对</td></tr><tr><td align="center">map.entries()</td><td align="center">返回一个以二元数组（键值对）作为元素的数组</td></tr><tr><td align="center">map.has(key)</td><td align="center">检查映射中是否包含某一键值对</td></tr><tr><td align="center">map.keys()</td><td align="center">返回一个当前映射中所有键作为元素的可迭代对象</td></tr><tr><td align="center">map.values()</td><td align="center">返回一个当前映射中所有值作为元素的可迭代对象</td></tr><tr><td align="center">map.size</td><td align="center">映射中键值对的数量</td></tr></tbody></table><h2 id="Map-与-Object-的区别"><a href="#Map-与-Object-的区别" class="headerlink" title="Map 与 Object 的区别"></a>Map 与 Object 的区别</h2><table><thead><tr><th align="left">对比项</th><th align="left">映射对象 Map</th><th align="left">Object 对象</th></tr></thead><tbody><tr><td align="left">存储键值对</td><td align="left">√</td><td align="left">√</td></tr><tr><td align="left">遍历所有的键值对</td><td align="left">√</td><td align="left">√</td></tr><tr><td align="left">检查是否包含指定的键值对</td><td align="left">√</td><td align="left">√</td></tr><tr><td align="left">使用字符串作为键</td><td align="left">√</td><td align="left">√</td></tr><tr><td align="left">使用 Symbol 作为键</td><td align="left">√</td><td align="left">√</td></tr><tr><td align="left">使用任意对象作为键</td><td align="left">√</td><td align="left"></td></tr><tr><td align="left">可以很方便的得知键值对的数量</td><td align="left">√</td><td align="left"></td></tr></tbody></table><h2 id="WeakMap"><a href="#WeakMap" class="headerlink" title="WeakMap"></a>WeakMap</h2><ul><li><p>与集合类型（Set）一样，映射类型也有一个 Weak 版本的 WeakMap。WeakMap 和 WeakSet 很相似，只不过 WeakMap 的键会检查变量的引用，只要其中任意一个引用被释放，该键值对就会被删除。</p></li><li><p>以下三点是 Map 和 WeakMap 的主要区别：</p><ul><li>Map 对象的键可以是任何类型，但 WeakMap 对象中的键只能是对象引用</li><li>WeakMap 不能包含无引用的对象，否则会被自动清除出集合（垃圾回收机制)</li><li>WeakSet 对象是不可枚举的，无法获取大小</li></ul></li><li><p>下段代码示例验证了 WeakMap 的以上特性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> weakmap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>();<br>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> o = &#123; <span class="hljs-attr">n</span>: <span class="hljs-number">1</span> &#125;;<br>  weakmap.set(o, <span class="hljs-string">&quot;A&quot;</span>);<br>&#125;)(); <span class="hljs-comment">// here &#x27;o&#x27; key is garbage collected</span><br><span class="hljs-keyword">let</span> s = &#123; <span class="hljs-attr">m</span>: <span class="hljs-number">1</span> &#125;;<br>weakmap.set(s, <span class="hljs-string">&quot;B&quot;</span>);<br><span class="hljs-built_in">console</span>.log(weakmap.get(s));<br><span class="hljs-built_in">console</span>.log(...weakmap); <span class="hljs-comment">// exception thrown</span><br>weakmap.delete(s);<br>weakmap.clear(); <span class="hljs-comment">// Exception, no such function</span><br><span class="hljs-keyword">let</span> weakmap_1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>([<br>  [&#123;&#125;, <span class="hljs-number">2</span>],<br>  [&#123;&#125;, <span class="hljs-number">5</span>]<br>]); <span class="hljs-comment">//this works</span><br><span class="hljs-built_in">console</span>.log(weakmap_1.size); <span class="hljs-comment">//undefined”</span><br><br><span class="hljs-comment">// --------------分割线--------------</span><br><span class="hljs-keyword">const</span> weakmap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">WeakMap</span>();<br><span class="hljs-keyword">let</span> keyObject = &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;;<br><span class="hljs-keyword">const</span> valObject = &#123; <span class="hljs-attr">score</span>: <span class="hljs-number">100</span> &#125;;<br>weakmap.set(keyObject, valObject);<br><span class="hljs-built_in">console</span>.log(weakmap.get(keyObject));<br><span class="hljs-comment">//output &#123; score: 100 &#125;</span><br>keyObject = <span class="hljs-literal">null</span>;<br><span class="hljs-built_in">console</span>.log(weakmap.has(keyObject));<br><span class="hljs-comment">//output false</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>今天的内容就介绍到这里，我们明白了 Map 是一个键值对的映射对象，相比 Object 来说可以使用任何键做为键值，并且能够很方便的获取键值对。WeakMap 相对于 Map 是一个不可枚举的对象，必须使用对象作为键值。如何更好的使用 Map 和 WeakMap 还需要具体结合我们实际的业务场景进行灵活使用。</p><p>参考资料: <a href="https://blog.csdn.net/Ed7zgeE9X/article/details/89879406">Map 与 WeakMap</a></p>]]></content>
    
    
    <categories>
      
      <category>javascript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>直播管理</title>
    <link href="/2020/01/20/front/%E7%9B%B4%E6%92%AD%E7%AE%A1%E7%90%86/"/>
    <url>/2020/01/20/front/%E7%9B%B4%E6%92%AD%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="在线教育直播系统"><a href="#在线教育直播系统" class="headerlink" title="在线教育直播系统"></a>在线教育直播系统</h1><h2 id="基础结构"><a href="#基础结构" class="headerlink" title="基础结构"></a>基础结构</h2><h3 id="App直播端-react-native"><a href="#App直播端-react-native" class="headerlink" title="App直播端(react-native):"></a>App直播端(react-native):</h3><ul><li><p>技术栈:react-native、redux(状态管理)、typescript、react-navigation(导航)、react-native-storage(全局状态存储)、react-native-vector-icons(图标)、<a href="http://socket.io/">socket.io</a>-client(实时聊天)、axios(网络请求)</p></li><li><p>gitlab地址: <a href="https://git.orhontech.com/OpenCloud/Frontend/application/app-live">直播端</a></p></li><li><p>页面结构:</p><blockquote><p>android(android项目)</p><p>ios(ios项目)</p><p>src</p><blockquote><p>config(项目配置信息)</p><p>model(interface接口)</p><p>navigation(导航)</p><p>pages(页面)</p><blockquote><p>auth(首次加载页面、鉴权页面、登录页面)</p><p>home(直播页面)</p></blockquote><p>store(redux全局状态管理)</p><p>utils(工具信息)</p><blockquote><p>request(请求处理axios)</p><p>common(公共的方法)</p><p>constant(常量列表)</p><p>data-stored(本地数据存储)</p></blockquote></blockquote></blockquote></li><li><p>实现功能:</p><p>登录功能, 直播功能, 可以查看客户端发送的消息,消息列表</p></li></ul><h3 id="App客户端-ionic"><a href="#App客户端-ionic" class="headerlink" title="App客户端(ionic)"></a>App客户端(ionic)</h3><ul><li><p>技术栈: ionic、cordova、<a href="https://github.com/bilibili/flv.js">flv播放器</a>、<a href="http://socket.io/">socket.io</a>-client</p></li><li><p>Gitlab地址: <a href="https://git.orhontech.com/OpenCloud/Frontend/application/app-client">客户端app</a></p></li><li><p>页面结构:</p><blockquote><p>src</p><blockquote><p>config(配置信息)</p><p>guard(路由鉴权)</p><p>pages(页面)</p><blockquote><p>login(登录页面)</p><p>video(播放界面)</p></blockquote><p>service(服务)</p><blockquote><p>permissions(登录逻辑、用户信息获取)</p><p>request(http请求)</p><p>utils(工具类)</p><p>Constant.ts(常量列表)</p></blockquote><p>tabs(导航)</p></blockquote></blockquote></li><li><p>实现功能</p><p>获取指定部门 人员的直播列表，播放直播，直播互动，可以发送消息，消息列表。</p></li></ul><h3 id="直播端后台管理-angular"><a href="#直播端后台管理-angular" class="headerlink" title="直播端后台管理(angular)"></a>直播端后台管理(angular)</h3><ul><li><p>技术栈: angular、<a href="https://ng-alain.com/zh">ng-alain(基于脚手架创建项目,使用了@delon扩展包)</a>、<a href="https://github.com/bilibili/flv.js">flv播放器</a>、rxjs</p></li><li><p>gitlab地址: <a href="https://git.orhontech.com/OpenCloud/Frontend/application/app-front.git">后台管理</a></p></li><li><p>页面结构</p><blockquote><p>src</p><blockquote><p>app</p><blockquote><p>config(配置信息)</p><p>core(核心模块-&gt;只会被导入一次)</p><p>layout(页面布局,header,footer,content)</p><p>routes(页面路由)</p><blockquote><p>live(直播管理)</p><p>sys(系统管理)</p><blockquote><p>department(部门管理)</p><p>role(角色管理)</p><p>user(用户管理)</p></blockquote></blockquote><p>service(服务)</p><p>shared(共享模块)</p></blockquote></blockquote></blockquote></li><li><p>实现功能:</p><p>部门(增删改)、角色(增删改)、用户(增删改)、直播管理（超级管理员进去查看所有人的直播状态,在线人数、观看次数 )、部门管理员进入只能查看新增 用户、自己部门直播实时状态</p></li></ul><h3 id="Node流媒体直播服务"><a href="#Node流媒体直播服务" class="headerlink" title="Node流媒体直播服务"></a>Node流媒体直播服务</h3><ul><li><p>技术栈: <a href="https://github.com/illuspas/Node-Media-Server">node-media-server、axios、moment</a></p></li><li><p>gitlab地址: <a href="https://git.orhontech.com/OpenCloud/Frontend/application/app-node">node流媒体服务器</a></p></li><li><p>页面结构:</p><blockquote><p>app.js(流媒体入口)</p><p>Auth_app.js(用户认证)</p><p>Mp4_app.js(本地配置存储mp4)</p><p>Multi_app(开启服务启动多核)</p></blockquote></li><li><p>实现功能:</p><p>推流、拉流。 实现监控 (连接、断开，开启推送、结束推送)直播流，播放流</p></li></ul><h3 id="后台管理-egg"><a href="#后台管理-egg" class="headerlink" title="后台管理(egg)"></a>后台管理(egg)</h3><ul><li><p>技术栈: <a href="https://eggjs.org/zh-cn/">egg</a>、egg-cors(跨域)、egg-jwt(jwt)、egg-mongoose(mongo数据库)、egg-redis(redis)、<a href="http://egg-socket.io/">egg-socket.io</a>(<a href="http://socket.io/">socket.io</a>)、egg-validate(post请求参数校验)</p></li><li><p>gilab地址: <a href="https://git.orhontech.com/OpenCloud/Frontend/application/app-node/tree/master/live-back">后台</a></p></li><li><p>页面结构:</p><blockquote><p>app</p><blockquote><p>controller(请求参数处理)</p><p>extend(扩展配置)</p><blockquote><p>helper(辅助处理相应，返回数据格式)</p></blockquote><p>io(<a href="http://socket.io/">socket.io</a>)</p><blockquote><p>controller(处理exange(发送消息事件))</p><p>middleware(中间件,拦截sock消息处理，加入房间，在线人数，离开房间)</p></blockquote><p>middleware(错误处理中间件)</p><p>model(mongo模型)</p><p>public(静态资源)</p><p>service(服务，处理和数据库交互)</p><p>router(路由)</p></blockquote><p>config(配置)</p><blockquote><p>config.default.js(默认配置)</p><blockquote><p>plugin.js(插件配置)</p></blockquote></blockquote></blockquote></li><li><p>实现功能:</p><p>角色管理、权限管理、用户管理、文件上传、部门管理、直播信息统计、观看人数、直播单条数据、<a href="http://socket.io/">socket.io</a>实现p2p聊天</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gitlab代码量统计</title>
    <link href="/2020/01/19/other/gitlab%E4%BB%A3%E7%A0%81%E9%87%8F%E7%BB%9F%E8%AE%A1/"/>
    <url>/2020/01/19/other/gitlab%E4%BB%A3%E7%A0%81%E9%87%8F%E7%BB%9F%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="使用python统计gitlab每个人的代码量汇总，按项目汇总"><a href="#使用python统计gitlab每个人的代码量汇总，按项目汇总" class="headerlink" title="使用python统计gitlab每个人的代码量汇总，按项目汇总"></a>使用python统计gitlab每个人的代码量汇总，按项目汇总</h2><p><a href="https://gitee.com/EightDoor/git-status">码云地址<a></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>其他</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(转)vscode使用编程字体</title>
    <link href="/2020/01/18/front/%E8%BD%AC-vscode%E4%BD%BF%E7%94%A8%E7%BC%96%E7%A8%8B%E5%AD%97%E4%BD%93/"/>
    <url>/2020/01/18/front/%E8%BD%AC-vscode%E4%BD%BF%E7%94%A8%E7%BC%96%E7%A8%8B%E5%AD%97%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.oschina.net/news/112860/jetbrains-mono">—开源中国地址—</a></p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人vscode配置setting.json</title>
    <link href="/2020/01/14/front/%E4%B8%AA%E4%BA%BAvscode%E9%85%8D%E7%BD%AEsetting-json/"/>
    <url>/2020/01/14/front/%E4%B8%AA%E4%BA%BAvscode%E9%85%8D%E7%BD%AEsetting-json/</url>
    
    <content type="html"><![CDATA[<p>{<br>“workbench.iconTheme”: “material-icon-theme”,<br>“editor.fontSize”: 18,<br>//字体文件<br>“editor.fontFamily”: “JetBrains Mono”,<br>“editor.formatOnSave”: true,<br>“java.configuration.checkProjectSettingsExclusions”: false,<br>“typescript.updateImportsOnFileMove.enabled”: “never”,<br>“cSpell.enabledLanguageIds”: [<br>“asciidoc”,<br>“c”,<br>“cpp”,<br>“csharp”,<br>“css”,<br>“git-commit”,<br>“go”,<br>“handlebars”,<br>“haskell”,<br>“html”,<br>“jade”,<br>“java”,<br>“javascriptreact”,<br>“json”,<br>“jsonc”,<br>“latex”,<br>“less”,<br>“markdown”,<br>“php”,<br>“plaintext”,<br>“pug”,<br>“python”,<br>“restructuredtext”,<br>“rust”,<br>“scala”,<br>“scss”,<br>“text”,<br>“typescript”,<br>“typescriptreact”,<br>“yaml”,<br>“yml”<br>],<br>“javascript.updateImportsOnFileMove.enabled”: “always”,<br>“[typescriptreact]”: {},<br>“editor.tabSize”: 2,<br>“editor.detectIndentation”: false, // 全部统一成 2 空格缩进<br>“eslint.enable”: true, //是否开启 vscode 的 eslint<br>“editor.codeActionsOnSave”: {<br>“source.fixAll.eslint”: true<br>},<br>“eslint.options”: { //指定 vscode 的 eslint 所处理的文件的后缀<br>“extensions”: [<br>“.js”,<br>“.jsx”,<br>“.ts”,<br>“.tsx”<br>]<br>},<br>“eslint.validate”: [ //确定校验准则<br>“javascript”,<br>“javascriptreact”,<br>“html”,<br>“typescript”,<br>“typescriptreact”<br>],<br>“search.followSymlinks”: false,<br>“files.exclude”: {<br>“<strong>/.git”: true,<br>“</strong>/.svn”: true,<br>“<strong>/.hg”: true,<br>“</strong>/CVS”: true,<br>“<strong>/.DS_Store”: true,<br>“</strong>/tmp”: true,<br>// “<strong>/node_modules”: true,<br>“</strong>/bower_components”: true,<br>// “<strong>/dist”: true<br>},<br>“files.watcherExclude”: {<br>“</strong>/.git/objects/<strong>“: true,<br>“</strong>/.git/subtree-cache/<strong>“: true,<br>// “</strong>/node_modules/<strong>“: true,<br>“</strong>/tmp/<strong>“: true,<br>“</strong>/bower_components/<strong>“: true,<br>“</strong>/dist/**“: true<br>},<br>“explorer.confirmDelete”: false<br>}</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>code-push</title>
    <link href="/2020/01/14/react-native/code-push/"/>
    <url>/2020/01/14/react-native/code-push/</url>
    
    <content type="html"><![CDATA[<ol><li>code-push 常用命令<br>安装: npm install -g code-push-cli<br>注册账号: code-push register<br>登陆: code-push login<br>注销: code-push logout<br>添加项目: code-push app add [app 名称]<br>删除项目: code-push app remove [app 名称]<br>列出账号下的所有项目: code-push app list<br>显示登陆的 token: code-push access-key ls<br>删除某个 access-key: code-push access-key rm <accessKey><br>添加协作人员：code-push collaborator add <appName> next@126.com<br>部署一个环境: code-push deployment add <appName> <deploymentName><br>删除部署: code-push deployment rm <appName><br>列出应用的部署: code-push deployment ls <appName><br>查询部署环境的 key: code-push de ployment ls <appName> -k<br>查看部署的历史版本信息: code-push deployment history <appName> <deploymentNmae><br>重命名一个部署: code-push deployment rename <appName> <currentDeploymentName> <newDeploymentName><br>打包 bundle 包 react-native bundle –entry-file index.js –bundle-output ./bundle/android/index.android.bundle –platform android –assets-dest ./bundle/android –dev false<br>发布更新版本 (直接推送到生产环境) code-push release-react newDemo android -t 1.0.0 –dev false –d Production –des “这是第一个” -m true<br>2.cordova 常用命令<br>// 发布 Staging 版本<br>$ code-push release-cordova <appName> ios</li></ol><p>// 发布 Production 版本<br>$ code-push release-cordova <appName> ios -d Production</p><p>// 查看已发布的版本<br>$ code-push deployment ls <appName> -k</p><p>//给 app 在热更新服务器上创建应用<br>code-push app add <appName> <os> <platform></p><p>//删除应用<br>code-push app rm <appName></p><p>//查看热更新服务器上有哪些应用<br>code-push app list</p><p>//发布应用<br>code-push release-cordova <appName> <platform> [options]<br>Options 参数:<br>–deploymentName, -d ..指定部署的类型.默认”Staging”,可以选择”Production”或其他 自定义类型<br>–description, –des ..添加描述<br>–mandatory, -m …….指定此版本是否为强制更新版本<br>例 1:发布更新<br>code-push release-cordova ionic2_tabs_android android –des “”<br>例 2:部署”Production”状态的更新,即生产环境的热更新部署使用这句命令<br>code-push release-cordova ionic2_tabs_android android -d “Production” –des “”<br>注意:一般生产环境的 app 是压缩过的,所以在发布正式环境热更新之前,先执行”ionic build –prod”压缩代码<br>例 3:部署 ios 应用的更新<br>code-push release-cordova ionic2_tabs_ios ios –des “”<br>例 4:添加-m 参数强制更新,code-push 插件从服务端下载完代码,会立即自动重启 app<br>code-push release-cordova ionic2_tabs_android android -m –des “”</p><p>//查看部署状态<br>code-push deployment list <appName><br>例 1:<br>code-push deployment list ionic2_tabs_android<br>例 2:查看部署状态及 key 值,忘记 key 就这样找<br>code-push deployment list ionic2_tabs_android -k</p><p>//清空部署记录<br>code-push deployment clear <appName> <deploymentName><br>如:清空 Staging 状态的部署记录<br>code-push deployment clear ionic2_tabs_android Staging</p><p>//添加部署状态,默认只有”Staging”和”Production”两中状态<br>code-push deployment add <appName> [deploymentName]</p><p>//删除自定义的部署状态<br>code-push deployment rm <appName> <deploymentName></p>]]></content>
    
    
    <categories>
      
      <category>react-native</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3.0源码解读</title>
    <link href="/2020/01/14/vue3/Vue3-0%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    <url>/2020/01/14/vue3/Vue3-0%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue3-0-源码解读"><a href="#Vue3-0-源码解读" class="headerlink" title="Vue3.0 源码解读"></a>Vue3.0 源码解读</h1><ul><li><p>参考资料</p><ul><li><p><a href="https://www.jianshu.com/p/c2a1aa2e2b14">Es6 系列之 Proxy-简书</a></p></li><li><p><a href="https://juejin.im/post/5da91fcff265da5b852928e1">Vue 3.0 源码逐行解析（一）：响应式模块（1）</a></p></li><li><p><a href="https://kuangpf.com/vue-cli-analysis/"> vue-cli 源码分析</a></p></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派(宝塔、frp)</title>
    <link href="/2020/01/13/tool/%E6%A0%91%E8%8E%93%E6%B4%BE-%E5%AE%9D%E5%A1%94%E3%80%81frp/"/>
    <url>/2020/01/13/tool/%E6%A0%91%E8%8E%93%E6%B4%BE-%E5%AE%9D%E5%A1%94%E3%80%81frp/</url>
    
    <content type="html"><![CDATA[<h1 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h1><ul><li><p>树莓派安装frp客户端</p><p>地址:<br>1.<a href="https://zhuanlan.zhihu.com/p/36156129">参考地址</a><br>2.<a href="https://www.cnblogs.com/h2zZhou/p/10355985.html">启动报错参考</a></p><ul><li>frp 后台启动: <a href="https://blog.csdn.net/x7418520/article/details/81077652">地址1</a><br><a href="https://blog.csdn.net/woaiyaou/article/details/83359799">地址2</a></li></ul></li></ul><ul><li><p>树莓派安装宝塔</p><p>宝塔面板5.9版本linux系统安装命令(Ubuntu/Deepin)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh<br></code></pre></td></tr></table></figure><p>地址: <a href="https://www.6fwq.com/641.html">参考地址</a></p></li><li><p>树莓派关在移动硬盘<br>地址: <a href="https://www.jianshu.com/p/ef23a1b88c22">参考地址</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ionic请求jira接口</title>
    <link href="/2020/01/12/ionic/ionic%E8%AF%B7%E6%B1%82jira%E6%8E%A5%E5%8F%A3/"/>
    <url>/2020/01/12/ionic/ionic%E8%AF%B7%E6%B1%82jira%E6%8E%A5%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h1><ul><li><p>背景:  jira项目   手机端app展示、统计项目信息。接口请求采用cookie、session认证方式</p></li><li><p>手机端: 采用angular+ionic 搭建app、接口请求采用httpClient。</p></li><li><p>遇到的问题:  手机端访问时候 跨域, cookie无法携带到请求头。</p><ul><li><p>解决方案:</p><p> 1.登录成功存储本地cookie(必须设置路径为/)</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 设置登录的cooike</span><br><span class="hljs-built_in">document</span>.cookie = <span class="hljs-string">`JSESSIONID=25911C87CD11A87ADE4874F11679A2E4;path=/`</span>;<br></code></pre></td></tr></table></figure><p>2.请求接口时设置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> headers = [&#123; <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span> &#125;]<br><span class="hljs-keyword">const</span> headerOptions = &#123;headers,<span class="hljs-attr">withCredentials</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><p>参考链接: </p><p><a href="https://blog.csdn.net/mengzuchao/article/details/84324713" target="_blank">js cookie 的路径以及 Cookie 域</a></p><p><a href="https://blog.csdn.net/weboof/article/details/79799231" target="_blank">cookie跨域问题</a></p></li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>app分发平台</title>
    <link href="/2020/01/11/tool/app%E5%88%86%E5%8F%91%E5%B9%B3%E5%8F%B0/"/>
    <url>/2020/01/11/tool/app%E5%88%86%E5%8F%91%E5%B9%B3%E5%8F%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h1><ul><li><p>为方便公司内部 app 版本统一管理,根据开源项目本地部署: <a href="https://github.com/rock-app/fabu.love">开源地址</a></p></li><li><p>采坑记录</p><p>1.安装依赖报错</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span>ernal/util/inspect.js:<span class="hljs-number">31</span><br><br><span class="hljs-keyword">const</span> types = <span class="hljs-built_in">int</span>ernalBinding(<span class="hljs-string">&#x27;types&#x27;</span>);<br><br>ReferenceError: <span class="hljs-built_in">int</span>ernalBinding <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> defined<br></code></pre></td></tr></table></figure><p>错误原因：这个问题是我将 node 版本升级至 v10.15.0，npm 升级至 6.4.1 后出现的，在此之前，我的 node 版本是 8+，没有出现这个问题。</p><ul><li>解决方案: 升级下 native 这个插件的版本即可</li></ul><p>​ <code>npm install natives@1.1.6</code></p><ul><li><p>错误原地址:<a href="http://www.jsphp.net/gulp/show-27-98-1.html">地址</a></p><p>2.pm2 启动后台服务报错</p></li></ul></li><li><p>解决方案: 在 server 根目录新增<code>app.js</code>，添加如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;babel-register&quot;</span>);<br><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;babel-polyfill&quot;</span>);<br><span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./index.js&quot;</span>);<br></code></pre></td></tr></table></figure><p>然后再执行<code>pm2 start app.js</code>即可</p></li><li><p>解决方案原地址:<a href="https://github.com/rock-app/fabu.love/issues/90">地址</a></p><p>3.nginx 配置 upload 文件下载 404</p></li><li><p>正确配置:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">location</span> / &#123;<br>       <span class="hljs-attribute">try_files</span> $uri $uri/ @router;<br>       <span class="hljs-attribute">index</span> index.html;<br>       <span class="hljs-attribute">root</span> /www/wwwroot/app.start6.cn/dist;<br>   &#125;<br><br>   <span class="hljs-attribute">location</span> /upload &#123;<br>       <span class="hljs-comment">#该root目录为根目录下config.json文件里dir目录 上传的apk和ipa文件当作静态文件处理</span><br>       <span class="hljs-attribute">alias</span> /apk/upload;<br><br>   &#125;<br><br>   <span class="hljs-attribute">location</span> @router &#123;  <span class="hljs-comment"># vue的router配置</span><br>       <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^.*$</span> /index.html <span class="hljs-literal">last</span>;<br>   &#125;<br><br>   <span class="hljs-attribute">location</span> /api/ &#123;  <span class="hljs-comment">#把以api打头的接口转发给后端server</span><br>     <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:9898; <span class="hljs-comment">#这里端口修改为后端服务运行的端口</span><br>     <span class="hljs-attribute">proxy_set_header</span> Host $host;<br>     <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;<br>   &#125;<br>   <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">208M</span>; <span class="hljs-comment">#最大上传的ipa/apk文件大小</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>动态表单实现</title>
    <link href="/2019/10/04/angular/%E5%8A%A8%E6%80%81%E8%A1%A8%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <url>/2019/10/04/angular/%E5%8A%A8%E6%80%81%E8%A1%A8%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="angular动态表单"><a href="#angular动态表单" class="headerlink" title="angular动态表单"></a>angular动态表单</h3><p>地址: <a href="http://angular.start6.cn/" title="angular表单">angular表单</a></p><h3 id="vue动态表单"><a href="#vue动态表单" class="headerlink" title="vue动态表单"></a>vue动态表单</h3><p>地址: <a href="http://vue.start6.cn/" title="vue表单">vue表单</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
